ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"ADC_SAR_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.ADC_SAR_1_CalcGain,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  23              		.type	ADC_SAR_1_CalcGain, %function
  24              	ADC_SAR_1_CalcGain:
  25              	.LFB12:
  26              		.file 1 "Generated_Source\\PSoC5\\ADC_SAR_1.c"
   1:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/ADC_SAR_1.c **** * File Name: ADC_SAR_1.c
   3:Generated_Source\PSoC5/ADC_SAR_1.c **** * Version 3.10
   4:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   5:Generated_Source\PSoC5/ADC_SAR_1.c **** * Description:
   6:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This file provides the source code to the API for the Successive
   7:Generated_Source\PSoC5/ADC_SAR_1.c **** *  approximation ADC Component.
   8:Generated_Source\PSoC5/ADC_SAR_1.c **** *
   9:Generated_Source\PSoC5/ADC_SAR_1.c **** * Note:
  10:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  11:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  12:Generated_Source\PSoC5/ADC_SAR_1.c **** * Copyright 2008-2015, Cypress Semiconductor Corporation.  All rights reserved.
  13:Generated_Source\PSoC5/ADC_SAR_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  14:Generated_Source\PSoC5/ADC_SAR_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  15:Generated_Source\PSoC5/ADC_SAR_1.c **** * the software package with which this file was provided.
  16:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  17:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  18:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "CyLib.h"
  19:Generated_Source\PSoC5/ADC_SAR_1.c **** #include "ADC_SAR_1.h"
  20:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  21:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
  22:Generated_Source\PSoC5/ADC_SAR_1.c ****     #include "ADC_SAR_1_theACLK.h"
  23:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
  24:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  25:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  26:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  27:Generated_Source\PSoC5/ADC_SAR_1.c **** * Forward function references
  28:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  29:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain(uint8 resolution);
  30:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  31:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 2


  32:Generated_Source\PSoC5/ADC_SAR_1.c **** /***************************************
  33:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global data allocation
  34:Generated_Source\PSoC5/ADC_SAR_1.c **** ***************************************/
  35:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_initVar = 0u;
  36:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_offset;
  37:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_countsPerVolt;     /* Obsolete Gain compensation */
  38:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int32 ADC_SAR_1_countsPer10Volt;   /* Gain compensation */
  39:Generated_Source\PSoC5/ADC_SAR_1.c **** volatile int16 ADC_SAR_1_shift;
  40:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  41:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  42:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  43:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Start
  44:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  45:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  46:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  47:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This is the preferred method to begin component operation.
  48:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() sets the initVar variable, calls the
  49:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() function, and then calls the
  50:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  51:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  52:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  53:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  54:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  55:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
  56:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  57:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  58:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
  59:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_initVar variable is used to indicate when/if initial
  60:Generated_Source\PSoC5/ADC_SAR_1.c **** *  configuration of this component has happened. The variable is initialized to
  61:Generated_Source\PSoC5/ADC_SAR_1.c **** *  zero and set to 1 the first time ADC_Start() is called. This allows for
  62:Generated_Source\PSoC5/ADC_SAR_1.c **** *  component Re-Start without re-initialization in all subsequent calls to the
  63:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  64:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If re-initialization of the component is required the variable should be set
  65:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to zero before call of ADC_SAR_1_Start() routine, or the user may call
  66:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Init() and ADC_SAR_1_Enable() as done in the
  67:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start() routine.
  68:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  69:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effect:
  70:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If the initVar variable is already set, this function only calls the
  71:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Enable() function.
  72:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  73:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
  74:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Start(void)
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  76:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  77:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If not Initialized then initialize all required hardware and software */
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_initVar == 0u)
  79:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_Init();
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
  82:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
  83:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_Enable();
  84:Generated_Source\PSoC5/ADC_SAR_1.c **** }
  85:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  86:Generated_Source\PSoC5/ADC_SAR_1.c **** 
  87:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
  88:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Init
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 3


  89:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
  90:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  91:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
  92:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Initialize component's parameters to the parameters set by user in the
  93:Generated_Source\PSoC5/ADC_SAR_1.c **** *  customizer of the component placed onto schematic. Usually called in
  94:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_Start().
  95:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  96:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
  97:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
  98:Generated_Source\PSoC5/ADC_SAR_1.c **** *
  99:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 100:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 101:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 102:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global variables:
 103:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable is initialized to 0.
 104:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 105:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 106:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Init(void)
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 108:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 109:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 110:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 111:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_theACLK_SetMode(CYCLK_DUTY);
 112:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 113:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 114:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 115:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start and set interrupt vector */
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntSetPriority(ADC_SAR_1_INTC_NUMBER, ADC_SAR_1_INTC_PRIOR_NUMBER);
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 118:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 119:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 120:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable IRQ mode*/
 121:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR1_REG |= ADC_SAR_1_SAR_IRQ_MASK_EN | ADC_SAR_1_SAR_IRQ_MODE_EDGE;
 122:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 123:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set SAR ADC resolution ADC */
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SetResolution(ADC_SAR_1_DEFAULT_RESOLUTION);
 125:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 126:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 127:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 128:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 129:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 130:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Enable
 131:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 132:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 133:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 134:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Enables the reference, clock and power for SAR ADC.
 135:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 136:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 137:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 138:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 139:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 140:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 141:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 142:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 143:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Enable(void)
 144:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 145:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 4


 146:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 147:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 148:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 149:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable the SAR ADC block in Active Power Mode */
 150:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG |= ADC_SAR_1_ACT_PWR_SAR_EN;
 151:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 152:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Enable the SAR ADC in Standby Power Mode*/
 153:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG |= ADC_SAR_1_STBY_PWR_SAR_EN;
 154:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 155:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 156:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 157:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG |= ADC_SAR_1_ACT_PWR_CLK_EN;
 158:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 159:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 160:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 161:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable VCM buffer and Enable Int Ref Amp */
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR3_REG;
 163:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 164:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* PD_BUF_VREF is OFF in External reference or Vdda reference mode */
 165:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if((ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF) || \
 166:Generated_Source\PSoC5/ADC_SAR_1.c ****         (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF))
 167:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg &= (uint8)~ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 168:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 169:Generated_Source\PSoC5/ADC_SAR_1.c ****         tmpReg |= ADC_SAR_1_SAR_EN_BUF_VREF_EN;
 170:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 171:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR3_REG = tmpReg;
 172:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 173:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set reference for ADC */
 174:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VNEG_VDDA_DIFF)
 175:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF)
 176:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 177:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* Internal Vdda reference or obsolete bypass mode */
 178:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_VDDA_VREF;           /* S7 */
 179:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__EXT_REF */
 180:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else  /* Reference goes through internal buffer */
 181:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED)
 182:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_VREF;            /* S3 + S4 */
 183:Generated_Source\PSoC5/ADC_SAR_1.c ****         #else /* INTREF Bypassed of External */
 184:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR6_REG = ADC_SAR_1_INT_BYPASS_EXT_VREF; /* S2 */
 185:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 186:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* VNEG_VDDA_DIFF */
 187:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 188:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Low non-overlap delay for sampling clock signals (for 1MSPS) */
 189:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u) /* MinPulseWidth <= 50 ns */
 190:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_DLY_INC;
 191:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* Set High non-overlap delay for sampling clock signals (for <500KSPS)*/
 192:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_DLY_INC;
 193:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 194:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 195:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Increase comparator latch enable delay by 20%, 
 196:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Increase comparator bias current by 30% without impacting delaysDelay 
 197:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Default for 1MSPS) 
 198:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 199:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_HIGH_POWER_PULSE == 0u)    /* MinPulseWidth <= 50 ns */
 200:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG |= ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
 201:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* for <500ksps */
 202:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR5_REG &= (uint8)~ADC_SAR_1_SAR_SEL_CSEL_DFT_CHAR;
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 5


 203:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 204:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 205:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set default power and other configurations for control register 0 in multiple lines */
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = (uint8)((uint8)ADC_SAR_1_DEFAULT_POWER << ADC_SAR_1_SAR_POWER_SHIFT)
 207:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 208:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if ((CY_PSOC5LP) || (ADC_SAR_1_DEFAULT_REFERENCE != ADC_SAR_1__EXT_REF))
 209:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_HIZ_CLEAR
 210:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* SAR_HIZ_CLEAR */
 211:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*Set Convertion mode */
 212:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)      /* If triggered mode */
 213:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_MX_SOF_UDB           /* source: UDB */
 214:Generated_Source\PSoC5/ADC_SAR_1.c ****         | ADC_SAR_1_SAR_SOF_MODE_EDGE        /* Set edge-sensitive sof source */
 215:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_DEFAULT_CONV_MODE */
 216:Generated_Source\PSoC5/ADC_SAR_1.c ****     ; /* end of multiple line initialization */
 217:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 218:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_TR0_REG = ADC_SAR_1_SAR_CAP_TRIM_2;
 219:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 220:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Enable clock for SAR ADC*/
 221:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CLK_REG |= ADC_SAR_1_SAR_MX_CLK_EN;
 222:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 223:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyDelayUs(10u); /* The block is ready to use 10 us after the enable signal is set high. */
 224:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 225:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_IRQ_REMOVE == 0u)
 226:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Clear a pending interrupt */
 227:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyIntClearPending(ADC_SAR_1_INTC_NUMBER);
 228:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 229:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 230:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 231:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 232:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 233:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 234:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 235:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_Stop
 236:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 237:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 238:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 239:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Stops ADC conversions and puts the ADC into its lowest power mode.
 240:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 241:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 242:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 243:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 244:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 245:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 246:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 247:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 248:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_Stop(void)
 249:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 250:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 251:Generated_Source\PSoC5/ADC_SAR_1.c ****     enableInterrupts = CyEnterCriticalSection();
 252:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 253:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Stop all conversions */
 254:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 255:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 256:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_ACT_PWR_SAR_EN;
 257:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 258:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_STBY_PWRMGR_SAR_REG &= (uint8)~ADC_SAR_1_STBY_PWR_SAR_EN;
 259:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 6


 260:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* This is only valid if there is an internal clock */
 261:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(ADC_SAR_1_DEFAULT_INTERNAL_CLK)
 262:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_ACT_PWR_CLK_EN;
 263:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 264:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 265:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 266:Generated_Source\PSoC5/ADC_SAR_1.c ****     CyExitCriticalSection(enableInterrupts);
 267:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 268:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 269:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 270:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 271:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 272:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetPower
 273:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 274:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 275:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 276:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the operational power of the ADC. You should use the higher power
 277:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings with faster clock speeds.
 278:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 279:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 280:Generated_Source\PSoC5/ADC_SAR_1.c **** *  power:  Power setting for ADC
 281:Generated_Source\PSoC5/ADC_SAR_1.c **** *  0 ->    Normal
 282:Generated_Source\PSoC5/ADC_SAR_1.c **** *  1 ->    Medium power
 283:Generated_Source\PSoC5/ADC_SAR_1.c **** *  2 ->    1.25 power
 284:Generated_Source\PSoC5/ADC_SAR_1.c **** *  3 ->    Minimum power.
 285:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 286:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 287:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 288:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 289:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 290:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetPower(uint8 power)
 291:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 292:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 293:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 294:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* mask off invalid power settings */
 295:Generated_Source\PSoC5/ADC_SAR_1.c ****     power &= ADC_SAR_1_SAR_API_POWER_MASK;
 296:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 297:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set Power parameter  */
 298:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg = ADC_SAR_1_SAR_CSR0_REG & (uint8)~ADC_SAR_1_SAR_POWER_MASK;
 299:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 300:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 301:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 302:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 303:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 304:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 305:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetResolution
 306:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 307:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 308:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 309:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the Relution of the SAR.
 310:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 311:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 312:Generated_Source\PSoC5/ADC_SAR_1.c **** *  resolution:
 313:Generated_Source\PSoC5/ADC_SAR_1.c **** *  12 ->    RES12
 314:Generated_Source\PSoC5/ADC_SAR_1.c **** *  10 ->    RES10
 315:Generated_Source\PSoC5/ADC_SAR_1.c **** *  8  ->    RES8
 316:Generated_Source\PSoC5/ADC_SAR_1.c **** *
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 7


 317:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 318:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 319:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 320:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 321:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC resolution cannot be changed during a conversion cycle. The
 322:Generated_Source\PSoC5/ADC_SAR_1.c **** *  recommended best practice is to stop conversions with
 323:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_StopConvert(), change the resolution, then restart the
 324:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversions with ADC_StartConvert().
 325:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you decide not to stop conversions before calling this API, you
 326:Generated_Source\PSoC5/ADC_SAR_1.c **** *  should use ADC_IsEndConversion() to wait until conversion is complete
 327:Generated_Source\PSoC5/ADC_SAR_1.c **** *  before changing the resolution.
 328:Generated_Source\PSoC5/ADC_SAR_1.c **** *  If you call ADC_SetResolution() during a conversion, the resolution will
 329:Generated_Source\PSoC5/ADC_SAR_1.c **** *  not be changed until the current conversion is complete. Data will not be
 330:Generated_Source\PSoC5/ADC_SAR_1.c **** *  available in the new resolution for another 6 + "New Resolution(in bits)"
 331:Generated_Source\PSoC5/ADC_SAR_1.c **** *  clock cycles.
 332:Generated_Source\PSoC5/ADC_SAR_1.c **** *  You may need add a delay of this number of clock cycles after
 333:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SetResolution() is called before data is valid again.
 334:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects ADC_CountsTo_Volts(), ADC_CountsTo_mVolts(), and
 335:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_CountsTo_uVolts() by calculating the correct conversion between ADC
 336:Generated_Source\PSoC5/ADC_SAR_1.c **** *  counts and the applied input voltage. Calculation depends on resolution,
 337:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input range, and voltage reference.
 338:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 339:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 340:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetResolution(uint8 resolution)
 341:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 342:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 343:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 344:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Set SAR ADC resolution and sample width: 18 conversion cycles at 12bits + 1 gap */
 345:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
 346:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 347:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 348:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 349:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 350:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 351:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_10BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 352:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 353:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 354:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_8BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 355:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 356:Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 357:Generated_Source\PSoC5/ADC_SAR_1.c ****             tmpReg = ADC_SAR_1_SAR_RESOLUTION_12BIT | ADC_SAR_1_SAR_SAMPLE_WIDTH;
 358:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 359:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
 360:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 361:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 362:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR2_REG = tmpReg;
 363:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 364:Generated_Source\PSoC5/ADC_SAR_1.c ****      /* Calculate gain for convert counts to volts */
 365:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_CalcGain(resolution);
 366:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 367:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 368:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 369:Generated_Source\PSoC5/ADC_SAR_1.c **** #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER)
 370:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 371:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 372:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 373:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StartConvert
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 8


 374:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 375:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 376:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 377:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In free-running mode, the ADC runs
 378:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  continuously. In software trigger mode, the function also acts as a software
 379:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  version of the SOC and every conversion must be triggered by
 380:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  ADC_SAR_1_StartConvert(). This function is not available when the
 381:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Hardware Trigger sample mode is selected.
 382:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 383:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 384:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 385:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 386:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 387:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 388:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 389:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 390:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to initiate a conversion. In Free Running mode, the ADC will
 391:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  run continuously. In a software trigger mode the function also acts as a
 392:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  software version of the SOC. Here every conversion has to be triggered by
 393:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  the routine. This writes into the SOC bit in SAR_CTRL reg.
 394:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 395:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
 396:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In a software trigger mode the function switches source for SOF from the
 397:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  external pin to the internal SOF generation. Application should not call
 398:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  StartConvert if external source used for SOF.
 399:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 400:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 401:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StartConvert(void)
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 403:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 404:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_MX_SOF_UDB;   /* source: SOF bit */
 405:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 406:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 407:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Start the conversion */
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_SOF_START_CONV;
 409:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 410:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 411:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 412:Generated_Source\PSoC5/ADC_SAR_1.c ****     /*******************************************************************************
 413:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Function Name: ADC_SAR_1_StopConvert
 414:Generated_Source\PSoC5/ADC_SAR_1.c ****     ********************************************************************************
 415:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 416:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Summary:
 417:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Forces the ADC to stop conversions. If a conversion is currently executing,
 418:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  that conversion will complete, but no further conversions will occur. This
 419:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  function is not available when the Hardware Trigger sample mode is selected.
 420:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 421:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Parameters:
 422:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 423:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 424:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Return:
 425:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  None.
 426:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 427:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Theory:
 428:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  Stops ADC conversion in Free Running mode.
 429:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 430:Generated_Source\PSoC5/ADC_SAR_1.c ****     * Side Effects:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 9


 431:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  In Software Trigger sample mode, this function sets a software version of the
 432:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  SOC to low level and switches the SOC source to hardware SOC input.
 433:Generated_Source\PSoC5/ADC_SAR_1.c ****     *
 434:Generated_Source\PSoC5/ADC_SAR_1.c ****     *******************************************************************************/
 435:Generated_Source\PSoC5/ADC_SAR_1.c ****     void ADC_SAR_1_StopConvert(void)
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 437:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 438:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_SAR_CSR0_REG &= (uint8)~ADC_SAR_1_SAR_SOF_START_CONV;
 439:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 440:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 441:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Return source to UDB for hardware SOF signal */
 442:Generated_Source\PSoC5/ADC_SAR_1.c ****             ADC_SAR_1_SAR_CSR0_REG |= ADC_SAR_1_SAR_MX_SOF_UDB;    /* source: UDB */
 443:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE */
 444:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 445:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 446:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 447:Generated_Source\PSoC5/ADC_SAR_1.c **** #endif /* End ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__HARDWARE_TRIGGER */
 448:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 449:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 450:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 451:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_IsEndConversion
 452:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 453:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 454:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 455:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Immediately returns the status of the conversion or does not return
 456:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (blocking) until the conversion completes, depending on the retMode
 457:Generated_Source\PSoC5/ADC_SAR_1.c **** *  parameter.
 458:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 459:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 460:Generated_Source\PSoC5/ADC_SAR_1.c **** *  retMode:  Check conversion return mode.
 461:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_RETURN_STATUS: Immediately returns the status. If the
 462:Generated_Source\PSoC5/ADC_SAR_1.c **** *     value returned is zero, the conversion is not complete, and this function
 463:Generated_Source\PSoC5/ADC_SAR_1.c **** *     should be retried until a nonzero result is returned.
 464:Generated_Source\PSoC5/ADC_SAR_1.c **** *   ADC_SAR_1_WAIT_FOR_RESULT: Does not return a result until the ADC
 465:Generated_Source\PSoC5/ADC_SAR_1.c **** *     conversion is complete.
 466:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 467:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 468:Generated_Source\PSoC5/ADC_SAR_1.c **** *  (uint8)  0 =>  The ADC is still calculating the last result.
 469:Generated_Source\PSoC5/ADC_SAR_1.c **** *           1 =>  The last conversion is complete.
 470:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 471:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 472:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function reads the end of conversion status, which is cleared on read.
 473:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 474:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 475:Generated_Source\PSoC5/ADC_SAR_1.c **** uint8 ADC_SAR_1_IsEndConversion(uint8 retMode)
 476:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 477:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 478:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 479:Generated_Source\PSoC5/ADC_SAR_1.c ****     do
 480:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****         status = ADC_SAR_1_SAR_CSR1_REG & ADC_SAR_1_SAR_EOF_1;
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 483:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 484:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(status == ADC_SAR_1_SAR_EOF_1)
 485:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 486:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* wait one ADC clock to let the EOC status bit release */
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         CyDelayUs(1u);
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 10


 488:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****         CY_GET_REG8(ADC_SAR_1_SAR_CSR1_PTR);
 490:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 491:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 492:Generated_Source\PSoC5/ADC_SAR_1.c ****     return(status);
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 494:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 496:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 497:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult8
 498:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 499:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 500:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 501:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns the result of an 8-bit conversion. If the resolution is set greater
 502:Generated_Source\PSoC5/ADC_SAR_1.c **** *  than 8 bits, the function returns the LSB of the result.
 503:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 504:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready.
 505:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 506:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 507:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 508:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 509:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 510:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The LSB of the last ADC conversion.
 511:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 512:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 513:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 514:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
 515:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 516:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 517:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 518:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 519:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 520:Generated_Source\PSoC5/ADC_SAR_1.c **** int8 ADC_SAR_1_GetResult8( void )
 521:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 522:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 524:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 525:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 526:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 527:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_GetResult16
 528:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 529:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 530:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 531:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Returns a 16-bit result for a conversion with a result that has a resolution
 532:Generated_Source\PSoC5/ADC_SAR_1.c **** *  of 8 to 12 bits.
 533:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_IsEndConversion() should be called to verify that the data
 534:Generated_Source\PSoC5/ADC_SAR_1.c **** *   sample is ready
 535:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 536:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 537:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 538:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 539:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 540:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The 16-bit result of the last ADC conversion
 541:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 542:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 543:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift - used to convert the ADC counts to the 2s
 544:Generated_Source\PSoC5/ADC_SAR_1.c **** *  compliment form.
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 11


 545:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 546:Generated_Source\PSoC5/ADC_SAR_1.c **** * Side Effects:
 547:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC counts to the 2s complement form.
 548:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 549:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 550:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_GetResult16( void )
 551:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 552:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 553:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 554:Generated_Source\PSoC5/ADC_SAR_1.c ****     res = CY_GET_REG16(ADC_SAR_1_SAR_WRK_PTR);
 555:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 556:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int16)res - ADC_SAR_1_shift );
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 558:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 559:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 560:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 561:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetOffset
 562:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 563:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 564:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 565:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC offset, which is used by ADC_SAR_1_CountsTo_Volts(),
 566:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts(), and ADC_SAR_1_CountsTo_uVolts()
 567:Generated_Source\PSoC5/ADC_SAR_1.c **** *  to subtract the offset from the given reading before calculating the voltage
 568:Generated_Source\PSoC5/ADC_SAR_1.c **** *  conversion.
 569:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 570:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 571:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16: This value is measured when the inputs are shorted or connected to
 572:Generated_Source\PSoC5/ADC_SAR_1.c ****    the same input voltage.
 573:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 574:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 575:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 576:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 577:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 578:Generated_Source\PSoC5/ADC_SAR_1.c **** *  The ADC_SAR_1_offset variable modified. This variable is used for
 579:Generated_Source\PSoC5/ADC_SAR_1.c **** *  offset calibration purpose.
 580:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Affects the ADC_SAR_1_CountsTo_Volts,
 581:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_CountsTo_mVolts, ADC_SAR_1_CountsTo_uVolts functions
 582:Generated_Source\PSoC5/ADC_SAR_1.c **** *  by subtracting the given offset.
 583:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 584:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 585:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetOffset(int16 offset)
 586:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 587:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 588:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 589:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 590:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 591:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 592:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CalcGain
 593:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 594:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 595:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 596:Generated_Source\PSoC5/ADC_SAR_1.c **** *  This function calculates the ADC gain in counts per 10 volt.
 597:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 598:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 599:Generated_Source\PSoC5/ADC_SAR_1.c **** *  uint8: resolution
 600:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 601:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 12


 602:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 603:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 604:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 605:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_shift variable initialized. This variable is used to
 606:Generated_Source\PSoC5/ADC_SAR_1.c **** *  convert the ADC counts to the 2s compliment form.
 607:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable initialized. This variable is used
 608:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 609:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 610:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 611:Generated_Source\PSoC5/ADC_SAR_1.c **** static void ADC_SAR_1_CalcGain( uint8 resolution )
 612:Generated_Source\PSoC5/ADC_SAR_1.c **** {
  27              		.loc 1 612 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              	.LVL0:
  32 0000 08B5     		push	{r3, lr}
  33              		.cfi_def_cfa_offset 8
  34              		.cfi_offset 3, -8
  35              		.cfi_offset 14, -4
 613:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 counts;
 614:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 615:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 616:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 617:Generated_Source\PSoC5/ADC_SAR_1.c ****         uint16 diff_zero;
 618:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 619:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 620:Generated_Source\PSoC5/ADC_SAR_1.c ****     switch (resolution)
  36              		.loc 1 620 0
  37 0002 0A28     		cmp	r0, #10
  38 0004 0FD0     		beq	.L6
  39 0006 0C28     		cmp	r0, #12
  40 0008 02D0     		beq	.L4
  41 000a 0828     		cmp	r0, #8
  42 000c 06D1     		bne	.L7
  43 000e 02E0     		b	.L5
  44              	.L4:
 621:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 622:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_12:
 623:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_12BIT;
  45              		.loc 1 623 0
  46 0010 4FF48052 		mov	r2, #4096
  47 0014 09E0     		b	.L3
  48              	.L5:
  49              	.LVL1:
 624:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 625:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 626:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 627:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT;
 628:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 629:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 630:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_10:
 631:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_10BIT;
 632:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 633:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 634:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 635:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 2u;
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 13


 636:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 637:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 638:Generated_Source\PSoC5/ADC_SAR_1.c ****         case (uint8)ADC_SAR_1__BITS_8:
 639:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = (int32)ADC_SAR_1_SAR_WRK_MAX_8BIT;
  50              		.loc 1 639 0
  51 0016 4FF48072 		mov	r2, #256
 640:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 641:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 642:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 643:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = ADC_SAR_1_SAR_DIFF_SHIFT >> 4u;
 644:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 645:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
  52              		.loc 1 645 0
  53 001a 06E0     		b	.L3
  54              	.LVL2:
  55              	.L7:
 646:Generated_Source\PSoC5/ADC_SAR_1.c ****         default: /* Halt CPU in debug mode if resolution is out of valid range */
 647:Generated_Source\PSoC5/ADC_SAR_1.c ****             counts = 0;
 648:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 649:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 650:Generated_Source\PSoC5/ADC_SAR_1.c ****                  (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC)) )
 651:Generated_Source\PSoC5/ADC_SAR_1.c ****                 diff_zero = 0u;
 652:Generated_Source\PSoC5/ADC_SAR_1.c ****             #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 653:Generated_Source\PSoC5/ADC_SAR_1.c ****             CYASSERT(0u != 0u);
  56              		.loc 1 653 0
  57 001c 0020     		movs	r0, #0
  58              	.LVL3:
  59 001e FFF7FEFF 		bl	CyHalt
  60              	.LVL4:
 647:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
  61              		.loc 1 647 0
  62 0022 0022     		movs	r2, #0
  63 0024 01E0     		b	.L3
  64              	.LVL5:
  65              	.L6:
 631:Generated_Source\PSoC5/ADC_SAR_1.c ****             #if(!((ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
  66              		.loc 1 631 0
  67 0026 4FF48062 		mov	r2, #1024
  68              	.LVL6:
  69              	.L3:
 654:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 655:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 656:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPerVolt = 0; /* Clear obsolete variable */
  70              		.loc 1 656 0
  71 002a 0021     		movs	r1, #0
  72 002c 094B     		ldr	r3, .L9
  73 002e 1980     		strh	r1, [r3]	@ movhi
 657:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Calculate gain in counts per 10 volts with rounding */
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (((counts * ADC_SAR_1_10MV_COUNTS) +
  74              		.loc 1 658 0
  75 0030 42F21073 		movw	r3, #10000
  76 0034 03FB02F3 		mul	r3, r3, r2
  77 0038 03F6C413 		addw	r3, r3, #2500
 659:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
  78              		.loc 1 659 0
  79 003c 064A     		ldr	r2, .L9+4
  80              	.LVL7:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 14


  81 003e 82FB0302 		smull	r0, r2, r2, r3
  82 0042 DB17     		asrs	r3, r3, #31
  83 0044 C3EBE223 		rsb	r3, r3, r2, asr #11
 658:Generated_Source\PSoC5/ADC_SAR_1.c ****                         ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV) / (ADC_SAR_1_DEFAULT_REF_VOLTAGE_MV * 2))
  84              		.loc 1 658 0
  85 0048 044A     		ldr	r2, .L9+8
  86 004a 1360     		str	r3, [r2]
 660:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 661:Generated_Source\PSoC5/ADC_SAR_1.c ****     #if( (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSS_TO_VREF) || \
 662:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDDA) || \
 663:Generated_Source\PSoC5/ADC_SAR_1.c ****          (ADC_SAR_1_DEFAULT_RANGE == ADC_SAR_1__VSSA_TO_VDAC) )
 664:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = 0;
  87              		.loc 1 664 0
  88 004c 044B     		ldr	r3, .L9+12
  89 004e 1980     		strh	r1, [r3]	@ movhi
  90 0050 08BD     		pop	{r3, pc}
  91              	.L10:
  92 0052 00BF     		.align	2
  93              	.L9:
  94 0054 00000000 		.word	ADC_SAR_1_countsPerVolt
  95 0058 AD8BDB68 		.word	1759218605
  96 005c 00000000 		.word	ADC_SAR_1_countsPer10Volt
  97 0060 00000000 		.word	ADC_SAR_1_shift
  98              		.cfi_endproc
  99              	.LFE12:
 100              		.size	ADC_SAR_1_CalcGain, .-ADC_SAR_1_CalcGain
 101              		.section	.text.ADC_SAR_1_Enable,"ax",%progbits
 102              		.align	2
 103              		.global	ADC_SAR_1_Enable
 104              		.thumb
 105              		.thumb_func
 106              		.type	ADC_SAR_1_Enable, %function
 107              	ADC_SAR_1_Enable:
 108              	.LFB2:
 144:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 109              		.loc 1 144 0
 110              		.cfi_startproc
 111              		@ args = 0, pretend = 0, frame = 0
 112              		@ frame_needed = 0, uses_anonymous_args = 0
 113 0000 10B5     		push	{r4, lr}
 114              		.cfi_def_cfa_offset 8
 115              		.cfi_offset 4, -8
 116              		.cfi_offset 14, -4
 147:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 117              		.loc 1 147 0
 118 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 119              	.LVL8:
 120 0006 0446     		mov	r4, r0
 121              	.LVL9:
 150:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 122              		.loc 1 150 0
 123 0008 1F4A     		ldr	r2, .L13
 124 000a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 125 000c 43F00203 		orr	r3, r3, #2
 126 0010 1370     		strb	r3, [r2]
 153:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 127              		.loc 1 153 0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 15


 128 0012 1032     		adds	r2, r2, #16
 129 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 130 0016 43F00203 		orr	r3, r3, #2
 131 001a 1370     		strb	r3, [r2]
 157:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG |= ADC_SAR_1_STBY_PWR_CLK_EN;
 132              		.loc 1 157 0
 133 001c 1A3A     		subs	r2, r2, #26
 134 001e 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 135 0020 43F00103 		orr	r3, r3, #1
 136 0024 1370     		strb	r3, [r2]
 158:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 137              		.loc 1 158 0
 138 0026 1032     		adds	r2, r2, #16
 139 0028 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 140 002a 43F00103 		orr	r3, r3, #1
 141 002e 1370     		strb	r3, [r2]
 162:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= ADC_SAR_1_SAR_EN_BUF_VCM_EN;
 142              		.loc 1 162 0
 143 0030 02F5AA52 		add	r2, r2, #5440
 144 0034 1A32     		adds	r2, r2, #26
 145 0036 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 146              	.LVL10:
 147 0038 03F0FE03 		and	r3, r3, #254
 148              	.LVL11:
 167:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else /* In INTREF or INTREF Bypassed this buffer is ON */
 149              		.loc 1 167 0
 150 003c 43F00203 		orr	r3, r3, #2
 151              	.LVL12:
 171:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 152              		.loc 1 171 0
 153 0040 1370     		strb	r3, [r2]
 184:Generated_Source\PSoC5/ADC_SAR_1.c ****         #endif /* ADC_SAR_1_DEFAULT_REFERENCE == ADC_SAR_1__INT_REF_NOT_BYPASSED */
 154              		.loc 1 184 0
 155 0042 0422     		movs	r2, #4
 156 0044 114B     		ldr	r3, .L13+4
 157              	.LVL13:
 158 0046 1A70     		strb	r2, [r3]
 159              	.LVL14:
 192:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 160              		.loc 1 192 0
 161 0048 013B     		subs	r3, r3, #1
 162 004a 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 163 004c 42F04002 		orr	r2, r2, #64
 164 0050 1A70     		strb	r2, [r3]
 202:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* ADC_SAR_1_HIGH_POWER_PULSE == 0u */
 165              		.loc 1 202 0
 166 0052 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 167 0054 02F0FC02 		and	r2, r2, #252
 168 0058 1A70     		strb	r2, [r3]
 206:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* SAR_HIZ_CLEAR:   Should not be used for LP */
 169              		.loc 1 206 0
 170 005a C822     		movs	r2, #200
 171 005c 053B     		subs	r3, r3, #5
 172 005e 1A70     		strb	r2, [r3]
 218:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 173              		.loc 1 218 0
 174 0060 0222     		movs	r2, #2
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 16


 175 0062 A3F59753 		sub	r3, r3, #4832
 176 0066 123B     		subs	r3, r3, #18
 177 0068 1A70     		strb	r2, [r3]
 221:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 178              		.loc 1 221 0
 179 006a 094A     		ldr	r2, .L13+8
 180 006c 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 181 006e 43F00803 		orr	r3, r3, #8
 182 0072 1370     		strb	r3, [r2]
 223:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 183              		.loc 1 223 0
 184 0074 0A20     		movs	r0, #10
 185 0076 FFF7FEFF 		bl	CyDelayUs
 186              	.LVL15:
 227:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 187              		.loc 1 227 0
 188 007a 0122     		movs	r2, #1
 189 007c 054B     		ldr	r3, .L13+12
 190 007e 1A60     		str	r2, [r3]
 230:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 191              		.loc 1 230 0
 192 0080 2046     		mov	r0, r4
 193 0082 FFF7FEFF 		bl	CyExitCriticalSection
 194              	.LVL16:
 195 0086 10BD     		pop	{r4, pc}
 196              	.LVL17:
 197              	.L14:
 198              		.align	2
 199              	.L13:
 200 0088 AB430040 		.word	1073759147
 201 008c 0E590040 		.word	1073764622
 202 0090 2F5B0040 		.word	1073765167
 203 0094 80E200E0 		.word	-536812928
 204              		.cfi_endproc
 205              	.LFE2:
 206              		.size	ADC_SAR_1_Enable, .-ADC_SAR_1_Enable
 207              		.section	.text.ADC_SAR_1_Stop,"ax",%progbits
 208              		.align	2
 209              		.global	ADC_SAR_1_Stop
 210              		.thumb
 211              		.thumb_func
 212              		.type	ADC_SAR_1_Stop, %function
 213              	ADC_SAR_1_Stop:
 214              	.LFB3:
 249:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 enableInterrupts;
 215              		.loc 1 249 0
 216              		.cfi_startproc
 217              		@ args = 0, pretend = 0, frame = 0
 218              		@ frame_needed = 0, uses_anonymous_args = 0
 219 0000 08B5     		push	{r3, lr}
 220              		.cfi_def_cfa_offset 8
 221              		.cfi_offset 3, -8
 222              		.cfi_offset 14, -4
 251:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 223              		.loc 1 251 0
 224 0002 FFF7FEFF 		bl	CyEnterCriticalSection
 225              	.LVL18:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 17


 254:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC block in Active Power Mode */
 226              		.loc 1 254 0
 227 0006 0F4A     		ldr	r2, .L17
 228 0008 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 229 000a 03F0FE03 		and	r3, r3, #254
 230 000e 1370     		strb	r3, [r2]
 256:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Disable the SAR ADC in Standby Power Mode */
 231              		.loc 1 256 0
 232 0010 A2F5AA52 		sub	r2, r2, #5440
 233 0014 1D3A     		subs	r2, r2, #29
 234 0016 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 235 0018 03F0FD03 		and	r3, r3, #253
 236 001c 1370     		strb	r3, [r2]
 258:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 237              		.loc 1 258 0
 238 001e 1032     		adds	r2, r2, #16
 239 0020 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 240 0022 03F0FD03 		and	r3, r3, #253
 241 0026 1370     		strb	r3, [r2]
 262:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_STBY_PWRMGR_CLK_REG &= (uint8)~ADC_SAR_1_STBY_PWR_CLK_EN;
 242              		.loc 1 262 0
 243 0028 1A3A     		subs	r2, r2, #26
 244 002a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 245 002c 03F0FE03 		and	r3, r3, #254
 246 0030 1370     		strb	r3, [r2]
 263:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 247              		.loc 1 263 0
 248 0032 1032     		adds	r2, r2, #16
 249 0034 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 250 0036 03F0FE03 		and	r3, r3, #254
 251 003a 1370     		strb	r3, [r2]
 266:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 252              		.loc 1 266 0
 253 003c FFF7FEFF 		bl	CyExitCriticalSection
 254              	.LVL19:
 255 0040 08BD     		pop	{r3, pc}
 256              	.L18:
 257 0042 00BF     		.align	2
 258              	.L17:
 259 0044 08590040 		.word	1073764616
 260              		.cfi_endproc
 261              	.LFE3:
 262              		.size	ADC_SAR_1_Stop, .-ADC_SAR_1_Stop
 263              		.section	.text.ADC_SAR_1_SetPower,"ax",%progbits
 264              		.align	2
 265              		.global	ADC_SAR_1_SetPower
 266              		.thumb
 267              		.thumb_func
 268              		.type	ADC_SAR_1_SetPower, %function
 269              	ADC_SAR_1_SetPower:
 270              	.LFB4:
 291:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 271              		.loc 1 291 0
 272              		.cfi_startproc
 273              		@ args = 0, pretend = 0, frame = 0
 274              		@ frame_needed = 0, uses_anonymous_args = 0
 275              		@ link register save eliminated.
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 18


 276              	.LVL20:
 298:Generated_Source\PSoC5/ADC_SAR_1.c ****     tmpReg |= (uint8)(power << ADC_SAR_1_SAR_POWER_SHIFT);
 277              		.loc 1 298 0
 278 0000 044A     		ldr	r2, .L20
 279 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 280 0004 03F03F03 		and	r3, r3, #63
 281              	.LVL21:
 299:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_SAR_CSR0_REG = tmpReg;
 282              		.loc 1 299 0
 283 0008 43EA8010 		orr	r0, r3, r0, lsl #6
 284              	.LVL22:
 285 000c C0B2     		uxtb	r0, r0
 286              	.LVL23:
 300:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 287              		.loc 1 300 0
 288 000e 1070     		strb	r0, [r2]
 289 0010 7047     		bx	lr
 290              	.L21:
 291 0012 00BF     		.align	2
 292              	.L20:
 293 0014 08590040 		.word	1073764616
 294              		.cfi_endproc
 295              	.LFE4:
 296              		.size	ADC_SAR_1_SetPower, .-ADC_SAR_1_SetPower
 297              		.section	.text.ADC_SAR_1_SetResolution,"ax",%progbits
 298              		.align	2
 299              		.global	ADC_SAR_1_SetResolution
 300              		.thumb
 301              		.thumb_func
 302              		.type	ADC_SAR_1_SetResolution, %function
 303              	ADC_SAR_1_SetResolution:
 304              	.LFB5:
 341:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 tmpReg;
 305              		.loc 1 341 0
 306              		.cfi_startproc
 307              		@ args = 0, pretend = 0, frame = 0
 308              		@ frame_needed = 0, uses_anonymous_args = 0
 309              	.LVL24:
 310 0000 10B5     		push	{r4, lr}
 311              		.cfi_def_cfa_offset 8
 312              		.cfi_offset 4, -8
 313              		.cfi_offset 14, -4
 314 0002 0446     		mov	r4, r0
 345:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 315              		.loc 1 345 0
 316 0004 0A28     		cmp	r0, #10
 317 0006 0DD0     		beq	.L27
 318 0008 0C28     		cmp	r0, #12
 319 000a 02D0     		beq	.L25
 320 000c 0828     		cmp	r0, #8
 321 000e 04D1     		bne	.L28
 322 0010 01E0     		b	.L26
 323              	.L25:
 348:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 324              		.loc 1 348 0
 325 0012 C422     		movs	r2, #196
 326 0014 07E0     		b	.L24
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 19


 327              	.L26:
 328              	.LVL25:
 354:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 329              		.loc 1 354 0
 330 0016 4422     		movs	r2, #68
 355:Generated_Source\PSoC5/ADC_SAR_1.c ****         default:
 331              		.loc 1 355 0
 332 0018 05E0     		b	.L24
 333              	.LVL26:
 334              	.L28:
 359:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 335              		.loc 1 359 0
 336 001a 0020     		movs	r0, #0
 337              	.LVL27:
 338 001c FFF7FEFF 		bl	CyHalt
 339              	.LVL28:
 357:Generated_Source\PSoC5/ADC_SAR_1.c ****             /* Halt CPU in debug mode if resolution is out of valid range */
 340              		.loc 1 357 0
 341 0020 C422     		movs	r2, #196
 342 0022 00E0     		b	.L24
 343              	.LVL29:
 344              	.L27:
 351:Generated_Source\PSoC5/ADC_SAR_1.c ****             break;
 345              		.loc 1 351 0
 346 0024 8422     		movs	r2, #132
 347              	.LVL30:
 348              	.L24:
 362:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 349              		.loc 1 362 0
 350 0026 034B     		ldr	r3, .L30
 351 0028 1A70     		strb	r2, [r3]
 365:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 352              		.loc 1 365 0
 353 002a 2046     		mov	r0, r4
 354 002c FFF7FEFF 		bl	ADC_SAR_1_CalcGain
 355              	.LVL31:
 356 0030 10BD     		pop	{r4, pc}
 357              	.L31:
 358 0032 00BF     		.align	2
 359              	.L30:
 360 0034 0A590040 		.word	1073764618
 361              		.cfi_endproc
 362              	.LFE5:
 363              		.size	ADC_SAR_1_SetResolution, .-ADC_SAR_1_SetResolution
 364              		.section	.text.ADC_SAR_1_Init,"ax",%progbits
 365              		.align	2
 366              		.global	ADC_SAR_1_Init
 367              		.thumb
 368              		.thumb_func
 369              		.type	ADC_SAR_1_Init, %function
 370              	ADC_SAR_1_Init:
 371              	.LFB1:
 107:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 372              		.loc 1 107 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 0
 375              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 20


 376 0000 08B5     		push	{r3, lr}
 377              		.cfi_def_cfa_offset 8
 378              		.cfi_offset 3, -8
 379              		.cfi_offset 14, -4
 111:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_INTERNAL_CLK */
 380              		.loc 1 111 0
 381 0002 1020     		movs	r0, #16
 382 0004 FFF7FEFF 		bl	ADC_SAR_1_theACLK_SetModeRegister
 383              	.LVL32:
 116:Generated_Source\PSoC5/ADC_SAR_1.c ****         (void)CyIntSetVector(ADC_SAR_1_INTC_NUMBER, &ADC_SAR_1_ISR);
 384              		.loc 1 116 0
 385 0008 0721     		movs	r1, #7
 386 000a 0020     		movs	r0, #0
 387 000c FFF7FEFF 		bl	CyIntSetPriority
 388              	.LVL33:
 117:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif   /* End ADC_SAR_1_IRQ_REMOVE */
 389              		.loc 1 117 0
 390 0010 0749     		ldr	r1, .L34
 391 0012 0020     		movs	r0, #0
 392 0014 FFF7FEFF 		bl	CyIntSetVector
 393              	.LVL34:
 121:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 394              		.loc 1 121 0
 395 0018 064A     		ldr	r2, .L34+4
 396 001a 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 397 001c 43F00603 		orr	r3, r3, #6
 398 0020 1370     		strb	r3, [r2]
 124:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = 0;
 399              		.loc 1 124 0
 400 0022 0C20     		movs	r0, #12
 401 0024 FFF7FEFF 		bl	ADC_SAR_1_SetResolution
 402              	.LVL35:
 125:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 403              		.loc 1 125 0
 404 0028 0022     		movs	r2, #0
 405 002a 034B     		ldr	r3, .L34+8
 406 002c 1A80     		strh	r2, [r3]	@ movhi
 407 002e 08BD     		pop	{r3, pc}
 408              	.L35:
 409              		.align	2
 410              	.L34:
 411 0030 00000000 		.word	ADC_SAR_1_ISR
 412 0034 09590040 		.word	1073764617
 413 0038 00000000 		.word	ADC_SAR_1_offset
 414              		.cfi_endproc
 415              	.LFE1:
 416              		.size	ADC_SAR_1_Init, .-ADC_SAR_1_Init
 417              		.section	.text.ADC_SAR_1_Start,"ax",%progbits
 418              		.align	2
 419              		.global	ADC_SAR_1_Start
 420              		.thumb
 421              		.thumb_func
 422              		.type	ADC_SAR_1_Start, %function
 423              	ADC_SAR_1_Start:
 424              	.LFB0:
  75:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 425              		.loc 1 75 0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 21


 426              		.cfi_startproc
 427              		@ args = 0, pretend = 0, frame = 0
 428              		@ frame_needed = 0, uses_anonymous_args = 0
 429 0000 08B5     		push	{r3, lr}
 430              		.cfi_def_cfa_offset 8
 431              		.cfi_offset 3, -8
 432              		.cfi_offset 14, -4
  78:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 433              		.loc 1 78 0
 434 0002 054B     		ldr	r3, .L39
 435 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 436 0006 23B9     		cbnz	r3, .L37
  80:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_initVar = 1u;
 437              		.loc 1 80 0
 438 0008 FFF7FEFF 		bl	ADC_SAR_1_Init
 439              	.LVL36:
  81:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 440              		.loc 1 81 0
 441 000c 0122     		movs	r2, #1
 442 000e 024B     		ldr	r3, .L39
 443 0010 1A70     		strb	r2, [r3]
 444              	.L37:
  83:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 445              		.loc 1 83 0
 446 0012 FFF7FEFF 		bl	ADC_SAR_1_Enable
 447              	.LVL37:
 448 0016 08BD     		pop	{r3, pc}
 449              	.L40:
 450              		.align	2
 451              	.L39:
 452 0018 00000000 		.word	.LANCHOR0
 453              		.cfi_endproc
 454              	.LFE0:
 455              		.size	ADC_SAR_1_Start, .-ADC_SAR_1_Start
 456              		.section	.text.ADC_SAR_1_StartConvert,"ax",%progbits
 457              		.align	2
 458              		.global	ADC_SAR_1_StartConvert
 459              		.thumb
 460              		.thumb_func
 461              		.type	ADC_SAR_1_StartConvert, %function
 462              	ADC_SAR_1_StartConvert:
 463              	.LFB6:
 402:Generated_Source\PSoC5/ADC_SAR_1.c ****         #if(ADC_SAR_1_DEFAULT_CONV_MODE != ADC_SAR_1__FREE_RUNNING)  /* If software triggered mode 
 464              		.loc 1 402 0
 465              		.cfi_startproc
 466              		@ args = 0, pretend = 0, frame = 0
 467              		@ frame_needed = 0, uses_anonymous_args = 0
 468              		@ link register save eliminated.
 408:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 469              		.loc 1 408 0
 470 0000 024A     		ldr	r2, .L42
 471 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 472 0004 43F00103 		orr	r3, r3, #1
 473 0008 1370     		strb	r3, [r2]
 474 000a 7047     		bx	lr
 475              	.L43:
 476              		.align	2
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 22


 477              	.L42:
 478 000c 08590040 		.word	1073764616
 479              		.cfi_endproc
 480              	.LFE6:
 481              		.size	ADC_SAR_1_StartConvert, .-ADC_SAR_1_StartConvert
 482              		.section	.text.ADC_SAR_1_StopConvert,"ax",%progbits
 483              		.align	2
 484              		.global	ADC_SAR_1_StopConvert
 485              		.thumb
 486              		.thumb_func
 487              		.type	ADC_SAR_1_StopConvert, %function
 488              	ADC_SAR_1_StopConvert:
 489              	.LFB7:
 436:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Stop all conversions */
 490              		.loc 1 436 0
 491              		.cfi_startproc
 492              		@ args = 0, pretend = 0, frame = 0
 493              		@ frame_needed = 0, uses_anonymous_args = 0
 494              		@ link register save eliminated.
 438:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 495              		.loc 1 438 0
 496 0000 024A     		ldr	r2, .L45
 497 0002 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 498 0004 03F0FE03 		and	r3, r3, #254
 499 0008 1370     		strb	r3, [r2]
 500 000a 7047     		bx	lr
 501              	.L46:
 502              		.align	2
 503              	.L45:
 504 000c 08590040 		.word	1073764616
 505              		.cfi_endproc
 506              	.LFE7:
 507              		.size	ADC_SAR_1_StopConvert, .-ADC_SAR_1_StopConvert
 508              		.section	.text.ADC_SAR_1_IsEndConversion,"ax",%progbits
 509              		.align	2
 510              		.global	ADC_SAR_1_IsEndConversion
 511              		.thumb
 512              		.thumb_func
 513              		.type	ADC_SAR_1_IsEndConversion, %function
 514              	ADC_SAR_1_IsEndConversion:
 515              	.LFB8:
 476:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint8 status;
 516              		.loc 1 476 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
 519              		@ frame_needed = 0, uses_anonymous_args = 0
 520              	.LVL38:
 521 0000 10B5     		push	{r4, lr}
 522              		.cfi_def_cfa_offset 8
 523              		.cfi_offset 4, -8
 524              		.cfi_offset 14, -4
 525              	.L49:
 481:Generated_Source\PSoC5/ADC_SAR_1.c ****     } while ((status != ADC_SAR_1_SAR_EOF_1) && (retMode == ADC_SAR_1_WAIT_FOR_RESULT));
 526              		.loc 1 481 0 discriminator 2
 527 0002 074B     		ldr	r3, .L52
 528 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 529              	.LVL39:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 23


 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 530              		.loc 1 482 0 discriminator 2
 531 0006 13F00104 		ands	r4, r3, #1
 532 000a 01D1     		bne	.L48
 482:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* If convertion complete, wait until EOF bit released */
 533              		.loc 1 482 0 is_stmt 0 discriminator 1
 534 000c 0028     		cmp	r0, #0
 535 000e F8D0     		beq	.L49
 536              	.L48:
 484:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 537              		.loc 1 484 0 is_stmt 1
 538 0010 24B1     		cbz	r4, .L50
 487:Generated_Source\PSoC5/ADC_SAR_1.c ****         /* Do the unconditional read operation of the CSR1 register to make sure the EOC bit has be
 539              		.loc 1 487 0
 540 0012 0120     		movs	r0, #1
 541              	.LVL40:
 542 0014 FFF7FEFF 		bl	CyDelayUs
 543              	.LVL41:
 489:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 544              		.loc 1 489 0
 545 0018 014B     		ldr	r3, .L52
 546 001a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 547              	.L50:
 493:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 548              		.loc 1 493 0
 549 001c 2046     		mov	r0, r4
 550 001e 10BD     		pop	{r4, pc}
 551              	.L53:
 552              		.align	2
 553              	.L52:
 554 0020 09590040 		.word	1073764617
 555              		.cfi_endproc
 556              	.LFE8:
 557              		.size	ADC_SAR_1_IsEndConversion, .-ADC_SAR_1_IsEndConversion
 558              		.section	.text.ADC_SAR_1_GetResult8,"ax",%progbits
 559              		.align	2
 560              		.global	ADC_SAR_1_GetResult8
 561              		.thumb
 562              		.thumb_func
 563              		.type	ADC_SAR_1_GetResult8, %function
 564              	ADC_SAR_1_GetResult8:
 565              	.LFB9:
 521:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( (int8)ADC_SAR_1_SAR_WRK0_REG - (int8)ADC_SAR_1_shift);
 566              		.loc 1 521 0
 567              		.cfi_startproc
 568              		@ args = 0, pretend = 0, frame = 0
 569              		@ frame_needed = 0, uses_anonymous_args = 0
 570              		@ link register save eliminated.
 522:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 571              		.loc 1 522 0
 572 0000 034B     		ldr	r3, .L55
 573 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 574 0004 034A     		ldr	r2, .L55+4
 575 0006 1088     		ldrh	r0, [r2]
 576 0008 00B2     		sxth	r0, r0
 577 000a 181A     		subs	r0, r3, r0
 523:Generated_Source\PSoC5/ADC_SAR_1.c **** 
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 24


 578              		.loc 1 523 0
 579 000c 40B2     		sxtb	r0, r0
 580 000e 7047     		bx	lr
 581              	.L56:
 582              		.align	2
 583              	.L55:
 584 0010 A25B0040 		.word	1073765282
 585 0014 00000000 		.word	ADC_SAR_1_shift
 586              		.cfi_endproc
 587              	.LFE9:
 588              		.size	ADC_SAR_1_GetResult8, .-ADC_SAR_1_GetResult8
 589              		.section	.text.ADC_SAR_1_GetResult16,"ax",%progbits
 590              		.align	2
 591              		.global	ADC_SAR_1_GetResult16
 592              		.thumb
 593              		.thumb_func
 594              		.type	ADC_SAR_1_GetResult16, %function
 595              	ADC_SAR_1_GetResult16:
 596              	.LFB10:
 551:Generated_Source\PSoC5/ADC_SAR_1.c ****     uint16 res;
 597              		.loc 1 551 0
 598              		.cfi_startproc
 599              		@ args = 0, pretend = 0, frame = 0
 600              		@ frame_needed = 0, uses_anonymous_args = 0
 601              		@ link register save eliminated.
 554:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 602              		.loc 1 554 0
 603 0000 034B     		ldr	r3, .L58
 604 0002 1888     		ldrh	r0, [r3]
 605 0004 80B2     		uxth	r0, r0
 606              	.LVL42:
 556:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 607              		.loc 1 556 0
 608 0006 034B     		ldr	r3, .L58+4
 609 0008 1B88     		ldrh	r3, [r3]
 610 000a C01A     		subs	r0, r0, r3
 611              	.LVL43:
 557:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 612              		.loc 1 557 0
 613 000c 00B2     		sxth	r0, r0
 614 000e 7047     		bx	lr
 615              	.L59:
 616              		.align	2
 617              	.L58:
 618 0010 A25B0040 		.word	1073765282
 619 0014 00000000 		.word	ADC_SAR_1_shift
 620              		.cfi_endproc
 621              	.LFE10:
 622              		.size	ADC_SAR_1_GetResult16, .-ADC_SAR_1_GetResult16
 623              		.section	.text.ADC_SAR_1_SetOffset,"ax",%progbits
 624              		.align	2
 625              		.global	ADC_SAR_1_SetOffset
 626              		.thumb
 627              		.thumb_func
 628              		.type	ADC_SAR_1_SetOffset, %function
 629              	ADC_SAR_1_SetOffset:
 630              	.LFB11:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 25


 586:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_offset = offset;
 631              		.loc 1 586 0
 632              		.cfi_startproc
 633              		@ args = 0, pretend = 0, frame = 0
 634              		@ frame_needed = 0, uses_anonymous_args = 0
 635              		@ link register save eliminated.
 636              	.LVL44:
 587:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 637              		.loc 1 587 0
 638 0000 014B     		ldr	r3, .L61
 639 0002 1880     		strh	r0, [r3]	@ movhi
 640 0004 7047     		bx	lr
 641              	.L62:
 642 0006 00BF     		.align	2
 643              	.L61:
 644 0008 00000000 		.word	ADC_SAR_1_offset
 645              		.cfi_endproc
 646              	.LFE11:
 647              		.size	ADC_SAR_1_SetOffset, .-ADC_SAR_1_SetOffset
 648              		.section	.text.ADC_SAR_1_SetGain,"ax",%progbits
 649              		.align	2
 650              		.global	ADC_SAR_1_SetGain
 651              		.thumb
 652              		.thumb_func
 653              		.type	ADC_SAR_1_SetGain, %function
 654              	ADC_SAR_1_SetGain:
 655              	.LFB13:
 665:Generated_Source\PSoC5/ADC_SAR_1.c ****     #else
 666:Generated_Source\PSoC5/ADC_SAR_1.c ****         ADC_SAR_1_shift = diff_zero;
 667:Generated_Source\PSoC5/ADC_SAR_1.c ****     #endif /* End ADC_SAR_1_DEFAULT_RANGE */
 668:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 669:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 670:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 671:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetGain
 673:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 675:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 676:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per volt for the voltage conversion functions
 677:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 678:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 679:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 680:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 681:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 682:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcGain counts per volt
 683:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 684:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 685:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 686:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 687:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 688:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 689:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 690:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 691:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 692:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetGain(int16 adcGain)
 693:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 656              		.loc 1 693 0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 26


 657              		.cfi_startproc
 658              		@ args = 0, pretend = 0, frame = 0
 659              		@ frame_needed = 0, uses_anonymous_args = 0
 660              		@ link register save eliminated.
 661              	.LVL45:
 694:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = (int32)adcGain * 10;
 662              		.loc 1 694 0
 663 0000 00EB8000 		add	r0, r0, r0, lsl #2
 664              	.LVL46:
 665 0004 4300     		lsls	r3, r0, #1
 666 0006 014A     		ldr	r2, .L64
 667 0008 1360     		str	r3, [r2]
 668 000a 7047     		bx	lr
 669              	.L65:
 670              		.align	2
 671              	.L64:
 672 000c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 673              		.cfi_endproc
 674              	.LFE13:
 675              		.size	ADC_SAR_1_SetGain, .-ADC_SAR_1_SetGain
 676              		.section	.text.ADC_SAR_1_SetScaledGain,"ax",%progbits
 677              		.align	2
 678              		.global	ADC_SAR_1_SetScaledGain
 679              		.thumb
 680              		.thumb_func
 681              		.type	ADC_SAR_1_SetScaledGain, %function
 682              	ADC_SAR_1_SetScaledGain:
 683              	.LFB14:
 695:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 696:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 697:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 698:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 699:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_SetScaledGain
 700:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 701:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 702:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 703:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Sets the ADC gain in counts per 10 volt for the voltage conversion functions
 704:Generated_Source\PSoC5/ADC_SAR_1.c **** *  that follow. This value is set by default by the reference and input range
 705:Generated_Source\PSoC5/ADC_SAR_1.c **** *  settings. It should only be used to further calibrate the ADC with a known
 706:Generated_Source\PSoC5/ADC_SAR_1.c **** *  input or if the ADC is using an external reference.
 707:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 708:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 709:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 adcGain  counts per 10 volt
 710:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 711:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 712:Generated_Source\PSoC5/ADC_SAR_1.c **** *  None.
 713:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 714:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 715:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable modified. This variable is used
 716:Generated_Source\PSoC5/ADC_SAR_1.c **** *  for gain calibration purpose.
 717:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 718:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 719:Generated_Source\PSoC5/ADC_SAR_1.c **** void ADC_SAR_1_SetScaledGain(int32 adcGain)
 720:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 684              		.loc 1 720 0
 685              		.cfi_startproc
 686              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 27


 687              		@ frame_needed = 0, uses_anonymous_args = 0
 688              		@ link register save eliminated.
 689              	.LVL47:
 721:Generated_Source\PSoC5/ADC_SAR_1.c ****     ADC_SAR_1_countsPer10Volt = adcGain;
 690              		.loc 1 721 0
 691 0000 014B     		ldr	r3, .L67
 692 0002 1860     		str	r0, [r3]
 693 0004 7047     		bx	lr
 694              	.L68:
 695 0006 00BF     		.align	2
 696              	.L67:
 697 0008 00000000 		.word	ADC_SAR_1_countsPer10Volt
 698              		.cfi_endproc
 699              	.LFE14:
 700              		.size	ADC_SAR_1_SetScaledGain, .-ADC_SAR_1_SetScaledGain
 701              		.section	.text.ADC_SAR_1_CountsTo_mVolts,"ax",%progbits
 702              		.align	2
 703              		.global	ADC_SAR_1_CountsTo_mVolts
 704              		.thumb
 705              		.thumb_func
 706              		.type	ADC_SAR_1_CountsTo_mVolts, %function
 707              	ADC_SAR_1_CountsTo_mVolts:
 708              	.LFB15:
 722:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 723:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 724:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 725:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 726:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_mVolts
 727:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 728:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 729:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 730:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to millivolts as a 16-bit integer.
 731:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 732:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 733:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts:  Result from the ADC conversion
 734:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 735:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 736:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 Result in mVolts
 737:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 738:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 739:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 740:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt variable used.
 741:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 742:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 743:Generated_Source\PSoC5/ADC_SAR_1.c **** int16 ADC_SAR_1_CountsTo_mVolts(int16 adcCounts)
 744:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 709              		.loc 1 744 0
 710              		.cfi_startproc
 711              		@ args = 0, pretend = 0, frame = 0
 712              		@ frame_needed = 0, uses_anonymous_args = 0
 713              		@ link register save eliminated.
 714              	.LVL48:
 715 0000 10B4     		push	{r4}
 716              		.cfi_def_cfa_offset 4
 717              		.cfi_offset 4, -4
 745:Generated_Source\PSoC5/ADC_SAR_1.c ****     int16 mVolts;
 746:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 28


 747:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 748:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 718              		.loc 1 748 0
 719 0002 124B     		ldr	r3, .L75
 720 0004 1B88     		ldrh	r3, [r3]
 721 0006 1BB2     		sxth	r3, r3
 722 0008 33B1     		cbz	r3, .L70
 749:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 750:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 723              		.loc 1 750 0
 724 000a 104B     		ldr	r3, .L75
 725 000c 1B88     		ldrh	r3, [r3]
 726 000e 1BB2     		sxth	r3, r3
 727 0010 03EB8303 		add	r3, r3, r3, lsl #2
 728 0014 5C00     		lsls	r4, r3, #1
 729              	.LVL49:
 730 0016 01E0     		b	.L71
 731              	.LVL50:
 732              	.L70:
 751:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 752:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 753:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 754:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 733              		.loc 1 754 0
 734 0018 0D4B     		ldr	r3, .L75+4
 735 001a 1C68     		ldr	r4, [r3]
 736              	.LVL51:
 737              	.L71:
 755:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 756:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 757:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 758:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 738              		.loc 1 758 0
 739 001c 0D4B     		ldr	r3, .L75+8
 740 001e 1988     		ldrh	r1, [r3]
 741 0020 411A     		subs	r1, r0, r1
 742 0022 09B2     		sxth	r1, r1
 743              	.LVL52:
 759:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Convert to millivolts with rounding */
 760:Generated_Source\PSoC5/ADC_SAR_1.c ****     mVolts = (int16)( (( (int32)adcCounts * ADC_SAR_1_10MV_COUNTS ) + ( (adcCounts > 0) ?
 744              		.loc 1 760 0
 745 0024 42F21073 		movw	r3, #10000
 746 0028 03FB01F2 		mul	r2, r3, r1
 761:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 747              		.loc 1 761 0
 748 002c 0029     		cmp	r1, #0
 749 002e 03DD     		ble	.L72
 750              		.loc 1 761 0 is_stmt 0 discriminator 1
 751 0030 04EBD470 		add	r0, r4, r4, lsr #31
 752 0034 4010     		asrs	r0, r0, #1
 753 0036 03E0     		b	.L73
 754              	.L72:
 755              		.loc 1 761 0 discriminator 2
 756 0038 04EBD470 		add	r0, r4, r4, lsr #31
 757 003c 4010     		asrs	r0, r0, #1
 758 003e 4042     		negs	r0, r0
 759              	.L73:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 29


 760:Generated_Source\PSoC5/ADC_SAR_1.c ****                        (countsPer10Volt / 2) : (-(countsPer10Volt / 2)) )) / countsPer10Volt);
 760              		.loc 1 760 0 is_stmt 1
 761 0040 8318     		adds	r3, r0, r2
 762              		.loc 1 761 0
 763 0042 93FBF4F0 		sdiv	r0, r3, r4
 764              	.LVL53:
 762:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 763:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( mVolts );
 764:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 765              		.loc 1 764 0
 766 0046 00B2     		sxth	r0, r0
 767 0048 10BC     		pop	{r4}
 768              		.cfi_restore 4
 769              		.cfi_def_cfa_offset 0
 770              	.LVL54:
 771 004a 7047     		bx	lr
 772              	.L76:
 773              		.align	2
 774              	.L75:
 775 004c 00000000 		.word	ADC_SAR_1_countsPerVolt
 776 0050 00000000 		.word	ADC_SAR_1_countsPer10Volt
 777 0054 00000000 		.word	ADC_SAR_1_offset
 778              		.cfi_endproc
 779              	.LFE15:
 780              		.size	ADC_SAR_1_CountsTo_mVolts, .-ADC_SAR_1_CountsTo_mVolts
 781              		.global	__aeabi_ldivmod
 782              		.section	.text.ADC_SAR_1_CountsTo_uVolts,"ax",%progbits
 783              		.align	2
 784              		.global	ADC_SAR_1_CountsTo_uVolts
 785              		.thumb
 786              		.thumb_func
 787              		.type	ADC_SAR_1_CountsTo_uVolts, %function
 788              	ADC_SAR_1_CountsTo_uVolts:
 789              	.LFB16:
 765:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 766:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 767:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 768:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_uVolts
 769:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 770:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 771:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 772:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to microvolts as a 32-bit integer.
 773:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 774:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 775:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 776:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 777:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 778:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int32 Result in micro Volts
 779:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 780:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 781:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 782:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to uVolts.
 783:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 784:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 785:Generated_Source\PSoC5/ADC_SAR_1.c **** int32 ADC_SAR_1_CountsTo_uVolts(int16 adcCounts)
 786:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 790              		.loc 1 786 0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 30


 791              		.cfi_startproc
 792              		@ args = 0, pretend = 0, frame = 0
 793              		@ frame_needed = 0, uses_anonymous_args = 0
 794              	.LVL55:
 795 0000 38B5     		push	{r3, r4, r5, lr}
 796              		.cfi_def_cfa_offset 16
 797              		.cfi_offset 3, -16
 798              		.cfi_offset 4, -12
 799              		.cfi_offset 5, -8
 800              		.cfi_offset 14, -4
 787:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 788:Generated_Source\PSoC5/ADC_SAR_1.c ****     int64 uVolts;
 789:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 790:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 791:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 801              		.loc 1 791 0
 802 0002 0D4B     		ldr	r3, .L81
 803 0004 1B88     		ldrh	r3, [r3]
 804 0006 1BB2     		sxth	r3, r3
 805 0008 33B1     		cbz	r3, .L78
 792:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 793:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 806              		.loc 1 793 0
 807 000a 0B4B     		ldr	r3, .L81
 808 000c 1B88     		ldrh	r3, [r3]
 809 000e 1BB2     		sxth	r3, r3
 810 0010 03EB8303 		add	r3, r3, r3, lsl #2
 811 0014 5A00     		lsls	r2, r3, #1
 812              	.LVL56:
 813 0016 01E0     		b	.L79
 814              	.LVL57:
 815              	.L78:
 794:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 795:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 796:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 797:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 816              		.loc 1 797 0
 817 0018 084B     		ldr	r3, .L81+4
 818 001a 1A68     		ldr	r2, [r3]
 819              	.LVL58:
 820              	.L79:
 798:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 799:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 800:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 801:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 821              		.loc 1 801 0
 822 001c 084B     		ldr	r3, .L81+8
 823 001e 1C88     		ldrh	r4, [r3]
 824 0020 041B     		subs	r4, r0, r4
 825              	.LVL59:
 802:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* To convert adcCounts to microVolts it is required to be multiplied
 803:Generated_Source\PSoC5/ADC_SAR_1.c ****     *  on 10 million and later divide on gain in counts per 10V.
 804:Generated_Source\PSoC5/ADC_SAR_1.c ****     */
 805:Generated_Source\PSoC5/ADC_SAR_1.c ****     uVolts = (( (int64)adcCounts * ADC_SAR_1_10UV_COUNTS ) / countsPer10Volt);
 826              		.loc 1 805 0
 827 0022 24B2     		sxth	r4, r4
 828 0024 E517     		asrs	r5, r4, #31
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 31


 829 0026 074B     		ldr	r3, .L81+12
 830 0028 A4FB0301 		umull	r0, r1, r4, r3
 831 002c 03FB0511 		mla	r1, r3, r5, r1
 832 0030 D317     		asrs	r3, r2, #31
 833 0032 FFF7FEFF 		bl	__aeabi_ldivmod
 834              	.LVL60:
 806:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 807:Generated_Source\PSoC5/ADC_SAR_1.c ****     return((int32) uVolts );
 808:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 835              		.loc 1 808 0
 836 0036 38BD     		pop	{r3, r4, r5, pc}
 837              	.LVL61:
 838              	.L82:
 839              		.align	2
 840              	.L81:
 841 0038 00000000 		.word	ADC_SAR_1_countsPerVolt
 842 003c 00000000 		.word	ADC_SAR_1_countsPer10Volt
 843 0040 00000000 		.word	ADC_SAR_1_offset
 844 0044 80969800 		.word	10000000
 845              		.cfi_endproc
 846              	.LFE16:
 847              		.size	ADC_SAR_1_CountsTo_uVolts, .-ADC_SAR_1_CountsTo_uVolts
 848              		.global	__aeabi_i2f
 849              		.global	__aeabi_fmul
 850              		.global	__aeabi_fdiv
 851              		.section	.text.ADC_SAR_1_CountsTo_Volts,"ax",%progbits
 852              		.align	2
 853              		.global	ADC_SAR_1_CountsTo_Volts
 854              		.thumb
 855              		.thumb_func
 856              		.type	ADC_SAR_1_CountsTo_Volts, %function
 857              	ADC_SAR_1_CountsTo_Volts:
 858              	.LFB17:
 809:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 810:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 811:Generated_Source\PSoC5/ADC_SAR_1.c **** /*******************************************************************************
 812:Generated_Source\PSoC5/ADC_SAR_1.c **** * Function Name: ADC_SAR_1_CountsTo_Volts
 813:Generated_Source\PSoC5/ADC_SAR_1.c **** ********************************************************************************
 814:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 815:Generated_Source\PSoC5/ADC_SAR_1.c **** * Summary:
 816:Generated_Source\PSoC5/ADC_SAR_1.c **** *  Converts the ADC output to volts as a floating-point number.
 817:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 818:Generated_Source\PSoC5/ADC_SAR_1.c **** * Parameters:
 819:Generated_Source\PSoC5/ADC_SAR_1.c **** *  int16 adcCounts: Result from the ADC conversion
 820:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 821:Generated_Source\PSoC5/ADC_SAR_1.c **** * Return:
 822:Generated_Source\PSoC5/ADC_SAR_1.c **** *  float Result in Volts
 823:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 824:Generated_Source\PSoC5/ADC_SAR_1.c **** * Global Variables:
 825:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_offset variable used.
 826:Generated_Source\PSoC5/ADC_SAR_1.c **** *  ADC_SAR_1_countsPer10Volt used to convert ADC counts to Volts.
 827:Generated_Source\PSoC5/ADC_SAR_1.c **** *
 828:Generated_Source\PSoC5/ADC_SAR_1.c **** *******************************************************************************/
 829:Generated_Source\PSoC5/ADC_SAR_1.c **** float32 ADC_SAR_1_CountsTo_Volts(int16 adcCounts)
 830:Generated_Source\PSoC5/ADC_SAR_1.c **** {
 859              		.loc 1 830 0
 860              		.cfi_startproc
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 32


 861              		@ args = 0, pretend = 0, frame = 0
 862              		@ frame_needed = 0, uses_anonymous_args = 0
 863              	.LVL62:
 864 0000 38B5     		push	{r3, r4, r5, lr}
 865              		.cfi_def_cfa_offset 16
 866              		.cfi_offset 3, -16
 867              		.cfi_offset 4, -12
 868              		.cfi_offset 5, -8
 869              		.cfi_offset 14, -4
 831:Generated_Source\PSoC5/ADC_SAR_1.c ****     float32 volts;
 832:Generated_Source\PSoC5/ADC_SAR_1.c ****     int32 countsPer10Volt;
 833:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 834:Generated_Source\PSoC5/ADC_SAR_1.c ****     if(ADC_SAR_1_countsPerVolt != 0)
 870              		.loc 1 834 0
 871 0002 0F4B     		ldr	r3, .L87
 872 0004 1B88     		ldrh	r3, [r3]
 873 0006 1BB2     		sxth	r3, r3
 874 0008 33B1     		cbz	r3, .L84
 835:Generated_Source\PSoC5/ADC_SAR_1.c ****     {   /* Support obsolete method */
 836:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = (int32)ADC_SAR_1_countsPerVolt * 10;
 875              		.loc 1 836 0
 876 000a 0D4B     		ldr	r3, .L87
 877 000c 1B88     		ldrh	r3, [r3]
 878 000e 1BB2     		sxth	r3, r3
 879 0010 03EB8303 		add	r3, r3, r3, lsl #2
 880 0014 5C00     		lsls	r4, r3, #1
 881              	.LVL63:
 882 0016 01E0     		b	.L85
 883              	.LVL64:
 884              	.L84:
 837:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 838:Generated_Source\PSoC5/ADC_SAR_1.c ****     else
 839:Generated_Source\PSoC5/ADC_SAR_1.c ****     {
 840:Generated_Source\PSoC5/ADC_SAR_1.c ****         countsPer10Volt = ADC_SAR_1_countsPer10Volt;
 885              		.loc 1 840 0
 886 0018 0A4B     		ldr	r3, .L87+4
 887 001a 1C68     		ldr	r4, [r3]
 888              	.LVL65:
 889              	.L85:
 841:Generated_Source\PSoC5/ADC_SAR_1.c ****     }
 842:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 843:Generated_Source\PSoC5/ADC_SAR_1.c ****     /* Subtract ADC offset */
 844:Generated_Source\PSoC5/ADC_SAR_1.c ****     adcCounts -= ADC_SAR_1_offset;
 890              		.loc 1 844 0
 891 001c 0A4B     		ldr	r3, .L87+8
 892 001e 1B88     		ldrh	r3, [r3]
 893 0020 C01A     		subs	r0, r0, r3
 894              	.LVL66:
 845:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 846:Generated_Source\PSoC5/ADC_SAR_1.c ****     volts = ((float32)adcCounts * ADC_SAR_1_10V_COUNTS) / (float32)countsPer10Volt;
 895              		.loc 1 846 0
 896 0022 00B2     		sxth	r0, r0
 897 0024 FFF7FEFF 		bl	__aeabi_i2f
 898              	.LVL67:
 899 0028 0849     		ldr	r1, .L87+12
 900 002a FFF7FEFF 		bl	__aeabi_fmul
 901              	.LVL68:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 33


 902 002e 0546     		mov	r5, r0
 903 0030 2046     		mov	r0, r4
 904 0032 FFF7FEFF 		bl	__aeabi_i2f
 905              	.LVL69:
 906 0036 0146     		mov	r1, r0
 907 0038 2846     		mov	r0, r5
 908 003a FFF7FEFF 		bl	__aeabi_fdiv
 909              	.LVL70:
 847:Generated_Source\PSoC5/ADC_SAR_1.c **** 
 848:Generated_Source\PSoC5/ADC_SAR_1.c ****     return( volts );
 849:Generated_Source\PSoC5/ADC_SAR_1.c **** }
 910              		.loc 1 849 0
 911 003e 38BD     		pop	{r3, r4, r5, pc}
 912              	.LVL71:
 913              	.L88:
 914              		.align	2
 915              	.L87:
 916 0040 00000000 		.word	ADC_SAR_1_countsPerVolt
 917 0044 00000000 		.word	ADC_SAR_1_countsPer10Volt
 918 0048 00000000 		.word	ADC_SAR_1_offset
 919 004c 00002041 		.word	1092616192
 920              		.cfi_endproc
 921              	.LFE17:
 922              		.size	ADC_SAR_1_CountsTo_Volts, .-ADC_SAR_1_CountsTo_Volts
 923              		.comm	ADC_SAR_1_shift,2,2
 924              		.comm	ADC_SAR_1_countsPer10Volt,4,4
 925              		.comm	ADC_SAR_1_countsPerVolt,2,2
 926              		.comm	ADC_SAR_1_offset,2,2
 927              		.global	ADC_SAR_1_initVar
 928              		.bss
 929              		.set	.LANCHOR0,. + 0
 930              		.type	ADC_SAR_1_initVar, %object
 931              		.size	ADC_SAR_1_initVar, 1
 932              	ADC_SAR_1_initVar:
 933 0000 00       		.space	1
 934              		.text
 935              	.Letext0:
 936              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 937              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 938              		.file 4 "Generated_Source\\PSoC5\\ADC_SAR_1_theACLK.h"
 939              		.section	.debug_info,"",%progbits
 940              	.Ldebug_info0:
 941 0000 BC050000 		.4byte	0x5bc
 942 0004 0400     		.2byte	0x4
 943 0006 00000000 		.4byte	.Ldebug_abbrev0
 944 000a 04       		.byte	0x4
 945 000b 01       		.uleb128 0x1
 946 000c B0020000 		.4byte	.LASF66
 947 0010 0C       		.byte	0xc
 948 0011 5F030000 		.4byte	.LASF67
 949 0015 1E040000 		.4byte	.LASF68
 950 0019 00000000 		.4byte	.Ldebug_ranges0+0
 951 001d 00000000 		.4byte	0
 952 0021 00000000 		.4byte	.Ldebug_line0
 953 0025 02       		.uleb128 0x2
 954 0026 04       		.byte	0x4
 955 0027 05       		.byte	0x5
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 34


 956 0028 696E7400 		.ascii	"int\000"
 957 002c 03       		.uleb128 0x3
 958 002d 04       		.byte	0x4
 959 002e 07       		.byte	0x7
 960 002f E8000000 		.4byte	.LASF0
 961 0033 03       		.uleb128 0x3
 962 0034 08       		.byte	0x8
 963 0035 05       		.byte	0x5
 964 0036 63000000 		.4byte	.LASF1
 965 003a 03       		.uleb128 0x3
 966 003b 08       		.byte	0x8
 967 003c 04       		.byte	0x4
 968 003d 88010000 		.4byte	.LASF2
 969 0041 03       		.uleb128 0x3
 970 0042 01       		.byte	0x1
 971 0043 06       		.byte	0x6
 972 0044 71000000 		.4byte	.LASF3
 973 0048 03       		.uleb128 0x3
 974 0049 01       		.byte	0x1
 975 004a 08       		.byte	0x8
 976 004b 4D020000 		.4byte	.LASF4
 977 004f 03       		.uleb128 0x3
 978 0050 02       		.byte	0x2
 979 0051 05       		.byte	0x5
 980 0052 75020000 		.4byte	.LASF5
 981 0056 03       		.uleb128 0x3
 982 0057 02       		.byte	0x2
 983 0058 07       		.byte	0x7
 984 0059 2B010000 		.4byte	.LASF6
 985 005d 03       		.uleb128 0x3
 986 005e 04       		.byte	0x4
 987 005f 05       		.byte	0x5
 988 0060 83000000 		.4byte	.LASF7
 989 0064 03       		.uleb128 0x3
 990 0065 04       		.byte	0x4
 991 0066 07       		.byte	0x7
 992 0067 FC000000 		.4byte	.LASF8
 993 006b 03       		.uleb128 0x3
 994 006c 08       		.byte	0x8
 995 006d 07       		.byte	0x7
 996 006e 4C000000 		.4byte	.LASF9
 997 0072 03       		.uleb128 0x3
 998 0073 04       		.byte	0x4
 999 0074 07       		.byte	0x7
 1000 0075 7F010000 		.4byte	.LASF10
 1001 0079 03       		.uleb128 0x3
 1002 007a 01       		.byte	0x1
 1003 007b 08       		.byte	0x8
 1004 007c 82030000 		.4byte	.LASF11
 1005 0080 04       		.uleb128 0x4
 1006 0081 A3000000 		.4byte	.LASF12
 1007 0085 02       		.byte	0x2
 1008 0086 E901     		.2byte	0x1e9
 1009 0088 48000000 		.4byte	0x48
 1010 008c 04       		.uleb128 0x4
 1011 008d 00000000 		.4byte	.LASF13
 1012 0091 02       		.byte	0x2
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 35


 1013 0092 EA01     		.2byte	0x1ea
 1014 0094 56000000 		.4byte	0x56
 1015 0098 04       		.uleb128 0x4
 1016 0099 BA000000 		.4byte	.LASF14
 1017 009d 02       		.byte	0x2
 1018 009e EB01     		.2byte	0x1eb
 1019 00a0 64000000 		.4byte	0x64
 1020 00a4 04       		.uleb128 0x4
 1021 00a5 4D010000 		.4byte	.LASF15
 1022 00a9 02       		.byte	0x2
 1023 00aa EC01     		.2byte	0x1ec
 1024 00ac 41000000 		.4byte	0x41
 1025 00b0 04       		.uleb128 0x4
 1026 00b1 7D040000 		.4byte	.LASF16
 1027 00b5 02       		.byte	0x2
 1028 00b6 ED01     		.2byte	0x1ed
 1029 00b8 4F000000 		.4byte	0x4f
 1030 00bc 04       		.uleb128 0x4
 1031 00bd 7D000000 		.4byte	.LASF17
 1032 00c1 02       		.byte	0x2
 1033 00c2 EE01     		.2byte	0x1ee
 1034 00c4 5D000000 		.4byte	0x5d
 1035 00c8 04       		.uleb128 0x4
 1036 00c9 77010000 		.4byte	.LASF18
 1037 00cd 02       		.byte	0x2
 1038 00ce EF01     		.2byte	0x1ef
 1039 00d0 D4000000 		.4byte	0xd4
 1040 00d4 03       		.uleb128 0x3
 1041 00d5 04       		.byte	0x4
 1042 00d6 04       		.byte	0x4
 1043 00d7 23020000 		.4byte	.LASF19
 1044 00db 03       		.uleb128 0x3
 1045 00dc 08       		.byte	0x8
 1046 00dd 04       		.byte	0x4
 1047 00de B3000000 		.4byte	.LASF20
 1048 00e2 04       		.uleb128 0x4
 1049 00e3 F8010000 		.4byte	.LASF21
 1050 00e7 02       		.byte	0x2
 1051 00e8 F401     		.2byte	0x1f4
 1052 00ea 33000000 		.4byte	0x33
 1053 00ee 04       		.uleb128 0x4
 1054 00ef 41020000 		.4byte	.LASF22
 1055 00f3 02       		.byte	0x2
 1056 00f4 9302     		.2byte	0x293
 1057 00f6 FA000000 		.4byte	0xfa
 1058 00fa 05       		.uleb128 0x5
 1059 00fb 80000000 		.4byte	0x80
 1060 00ff 04       		.uleb128 0x4
 1061 0100 9D000000 		.4byte	.LASF23
 1062 0104 02       		.byte	0x2
 1063 0105 9402     		.2byte	0x294
 1064 0107 0B010000 		.4byte	0x10b
 1065 010b 05       		.uleb128 0x5
 1066 010c 8C000000 		.4byte	0x8c
 1067 0110 04       		.uleb128 0x4
 1068 0111 59010000 		.4byte	.LASF24
 1069 0115 02       		.byte	0x2
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 36


 1070 0116 9502     		.2byte	0x295
 1071 0118 1C010000 		.4byte	0x11c
 1072 011c 05       		.uleb128 0x5
 1073 011d 98000000 		.4byte	0x98
 1074 0121 06       		.uleb128 0x6
 1075 0122 39000000 		.4byte	.LASF69
 1076 0126 01       		.byte	0x1
 1077 0127 6302     		.2byte	0x263
 1078 0129 00000000 		.4byte	.LFB12
 1079 012d 64000000 		.4byte	.LFE12-.LFB12
 1080 0131 01       		.uleb128 0x1
 1081 0132 9C       		.byte	0x9c
 1082 0133 67010000 		.4byte	0x167
 1083 0137 07       		.uleb128 0x7
 1084 0138 54030000 		.4byte	.LASF31
 1085 013c 01       		.byte	0x1
 1086 013d 6302     		.2byte	0x263
 1087 013f 80000000 		.4byte	0x80
 1088 0143 00000000 		.4byte	.LLST0
 1089 0147 08       		.uleb128 0x8
 1090 0148 32000000 		.4byte	.LASF25
 1091 014c 01       		.byte	0x1
 1092 014d 6502     		.2byte	0x265
 1093 014f BC000000 		.4byte	0xbc
 1094 0153 3A000000 		.4byte	.LLST1
 1095 0157 09       		.uleb128 0x9
 1096 0158 22000000 		.4byte	.LVL4
 1097 015c 72050000 		.4byte	0x572
 1098 0160 0A       		.uleb128 0xa
 1099 0161 01       		.uleb128 0x1
 1100 0162 50       		.byte	0x50
 1101 0163 01       		.uleb128 0x1
 1102 0164 30       		.byte	0x30
 1103 0165 00       		.byte	0
 1104 0166 00       		.byte	0
 1105 0167 0B       		.uleb128 0xb
 1106 0168 87020000 		.4byte	.LASF28
 1107 016c 01       		.byte	0x1
 1108 016d 8F       		.byte	0x8f
 1109 016e 00000000 		.4byte	.LFB2
 1110 0172 98000000 		.4byte	.LFE2-.LFB2
 1111 0176 01       		.uleb128 0x1
 1112 0177 9C       		.byte	0x9c
 1113 0178 C7010000 		.4byte	0x1c7
 1114 017c 0C       		.uleb128 0xc
 1115 017d B4040000 		.4byte	.LASF26
 1116 0181 01       		.byte	0x1
 1117 0182 91       		.byte	0x91
 1118 0183 80000000 		.4byte	0x80
 1119 0187 67000000 		.4byte	.LLST2
 1120 018b 0C       		.uleb128 0xc
 1121 018c C7030000 		.4byte	.LASF27
 1122 0190 01       		.byte	0x1
 1123 0191 92       		.byte	0x92
 1124 0192 80000000 		.4byte	0x80
 1125 0196 98000000 		.4byte	.LLST3
 1126 019a 0D       		.uleb128 0xd
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 37


 1127 019b 06000000 		.4byte	.LVL8
 1128 019f 7D050000 		.4byte	0x57d
 1129 01a3 0E       		.uleb128 0xe
 1130 01a4 7A000000 		.4byte	.LVL15
 1131 01a8 88050000 		.4byte	0x588
 1132 01ac B6010000 		.4byte	0x1b6
 1133 01b0 0A       		.uleb128 0xa
 1134 01b1 01       		.uleb128 0x1
 1135 01b2 50       		.byte	0x50
 1136 01b3 01       		.uleb128 0x1
 1137 01b4 3A       		.byte	0x3a
 1138 01b5 00       		.byte	0
 1139 01b6 09       		.uleb128 0x9
 1140 01b7 86000000 		.4byte	.LVL16
 1141 01bb 93050000 		.4byte	0x593
 1142 01bf 0A       		.uleb128 0xa
 1143 01c0 01       		.uleb128 0x1
 1144 01c1 50       		.byte	0x50
 1145 01c2 02       		.uleb128 0x2
 1146 01c3 74       		.byte	0x74
 1147 01c4 00       		.sleb128 0
 1148 01c5 00       		.byte	0
 1149 01c6 00       		.byte	0
 1150 01c7 0B       		.uleb128 0xb
 1151 01c8 CB040000 		.4byte	.LASF29
 1152 01cc 01       		.byte	0x1
 1153 01cd F8       		.byte	0xf8
 1154 01ce 00000000 		.4byte	.LFB3
 1155 01d2 48000000 		.4byte	.LFE3-.LFB3
 1156 01d6 01       		.uleb128 0x1
 1157 01d7 9C       		.byte	0x9c
 1158 01d8 FE010000 		.4byte	0x1fe
 1159 01dc 0C       		.uleb128 0xc
 1160 01dd C7030000 		.4byte	.LASF27
 1161 01e1 01       		.byte	0x1
 1162 01e2 FA       		.byte	0xfa
 1163 01e3 80000000 		.4byte	0x80
 1164 01e7 AB000000 		.4byte	.LLST4
 1165 01eb 0D       		.uleb128 0xd
 1166 01ec 06000000 		.4byte	.LVL18
 1167 01f0 7D050000 		.4byte	0x57d
 1168 01f4 0D       		.uleb128 0xd
 1169 01f5 40000000 		.4byte	.LVL19
 1170 01f9 93050000 		.4byte	0x593
 1171 01fd 00       		.byte	0
 1172 01fe 0F       		.uleb128 0xf
 1173 01ff F9030000 		.4byte	.LASF30
 1174 0203 01       		.byte	0x1
 1175 0204 2201     		.2byte	0x122
 1176 0206 00000000 		.4byte	.LFB4
 1177 020a 18000000 		.4byte	.LFE4-.LFB4
 1178 020e 01       		.uleb128 0x1
 1179 020f 9C       		.byte	0x9c
 1180 0210 35020000 		.4byte	0x235
 1181 0214 07       		.uleb128 0x7
 1182 0215 3B020000 		.4byte	.LASF32
 1183 0219 01       		.byte	0x1
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 38


 1184 021a 2201     		.2byte	0x122
 1185 021c 80000000 		.4byte	0x80
 1186 0220 BE000000 		.4byte	.LLST5
 1187 0224 08       		.uleb128 0x8
 1188 0225 B4040000 		.4byte	.LASF26
 1189 0229 01       		.byte	0x1
 1190 022a 2401     		.2byte	0x124
 1191 022c 80000000 		.4byte	0x80
 1192 0230 F0000000 		.4byte	.LLST6
 1193 0234 00       		.byte	0
 1194 0235 0F       		.uleb128 0xf
 1195 0236 94010000 		.4byte	.LASF33
 1196 023a 01       		.byte	0x1
 1197 023b 5401     		.2byte	0x154
 1198 023d 00000000 		.4byte	.LFB5
 1199 0241 38000000 		.4byte	.LFE5-.LFB5
 1200 0245 01       		.uleb128 0x1
 1201 0246 9C       		.byte	0x9c
 1202 0247 8F020000 		.4byte	0x28f
 1203 024b 07       		.uleb128 0x7
 1204 024c 54030000 		.4byte	.LASF31
 1205 0250 01       		.byte	0x1
 1206 0251 5401     		.2byte	0x154
 1207 0253 80000000 		.4byte	0x80
 1208 0257 0E010000 		.4byte	.LLST7
 1209 025b 08       		.uleb128 0x8
 1210 025c B4040000 		.4byte	.LASF26
 1211 0260 01       		.byte	0x1
 1212 0261 5601     		.2byte	0x156
 1213 0263 80000000 		.4byte	0x80
 1214 0267 48010000 		.4byte	.LLST8
 1215 026b 0E       		.uleb128 0xe
 1216 026c 20000000 		.4byte	.LVL28
 1217 0270 72050000 		.4byte	0x572
 1218 0274 7E020000 		.4byte	0x27e
 1219 0278 0A       		.uleb128 0xa
 1220 0279 01       		.uleb128 0x1
 1221 027a 50       		.byte	0x50
 1222 027b 01       		.uleb128 0x1
 1223 027c 30       		.byte	0x30
 1224 027d 00       		.byte	0
 1225 027e 09       		.uleb128 0x9
 1226 027f 30000000 		.4byte	.LVL31
 1227 0283 21010000 		.4byte	0x121
 1228 0287 0A       		.uleb128 0xa
 1229 0288 01       		.uleb128 0x1
 1230 0289 50       		.byte	0x50
 1231 028a 02       		.uleb128 0x2
 1232 028b 74       		.byte	0x74
 1233 028c 00       		.sleb128 0
 1234 028d 00       		.byte	0
 1235 028e 00       		.byte	0
 1236 028f 0B       		.uleb128 0xb
 1237 0290 3E010000 		.4byte	.LASF34
 1238 0294 01       		.byte	0x1
 1239 0295 6A       		.byte	0x6a
 1240 0296 00000000 		.4byte	.LFB1
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 39


 1241 029a 3C000000 		.4byte	.LFE1-.LFB1
 1242 029e 01       		.uleb128 0x1
 1243 029f 9C       		.byte	0x9c
 1244 02a0 F2020000 		.4byte	0x2f2
 1245 02a4 0E       		.uleb128 0xe
 1246 02a5 08000000 		.4byte	.LVL32
 1247 02a9 9E050000 		.4byte	0x59e
 1248 02ad B7020000 		.4byte	0x2b7
 1249 02b1 0A       		.uleb128 0xa
 1250 02b2 01       		.uleb128 0x1
 1251 02b3 50       		.byte	0x50
 1252 02b4 01       		.uleb128 0x1
 1253 02b5 40       		.byte	0x40
 1254 02b6 00       		.byte	0
 1255 02b7 0E       		.uleb128 0xe
 1256 02b8 10000000 		.4byte	.LVL33
 1257 02bc A9050000 		.4byte	0x5a9
 1258 02c0 CF020000 		.4byte	0x2cf
 1259 02c4 0A       		.uleb128 0xa
 1260 02c5 01       		.uleb128 0x1
 1261 02c6 50       		.byte	0x50
 1262 02c7 01       		.uleb128 0x1
 1263 02c8 30       		.byte	0x30
 1264 02c9 0A       		.uleb128 0xa
 1265 02ca 01       		.uleb128 0x1
 1266 02cb 51       		.byte	0x51
 1267 02cc 01       		.uleb128 0x1
 1268 02cd 37       		.byte	0x37
 1269 02ce 00       		.byte	0
 1270 02cf 0E       		.uleb128 0xe
 1271 02d0 18000000 		.4byte	.LVL34
 1272 02d4 B4050000 		.4byte	0x5b4
 1273 02d8 E2020000 		.4byte	0x2e2
 1274 02dc 0A       		.uleb128 0xa
 1275 02dd 01       		.uleb128 0x1
 1276 02de 50       		.byte	0x50
 1277 02df 01       		.uleb128 0x1
 1278 02e0 30       		.byte	0x30
 1279 02e1 00       		.byte	0
 1280 02e2 09       		.uleb128 0x9
 1281 02e3 28000000 		.4byte	.LVL35
 1282 02e7 35020000 		.4byte	0x235
 1283 02eb 0A       		.uleb128 0xa
 1284 02ec 01       		.uleb128 0x1
 1285 02ed 50       		.byte	0x50
 1286 02ee 01       		.uleb128 0x1
 1287 02ef 3C       		.byte	0x3c
 1288 02f0 00       		.byte	0
 1289 02f1 00       		.byte	0
 1290 02f2 0B       		.uleb128 0xb
 1291 02f3 E8010000 		.4byte	.LASF35
 1292 02f7 01       		.byte	0x1
 1293 02f8 4A       		.byte	0x4a
 1294 02f9 00000000 		.4byte	.LFB0
 1295 02fd 1C000000 		.4byte	.LFE0-.LFB0
 1296 0301 01       		.uleb128 0x1
 1297 0302 9C       		.byte	0x9c
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 40


 1298 0303 1A030000 		.4byte	0x31a
 1299 0307 0D       		.uleb128 0xd
 1300 0308 0C000000 		.4byte	.LVL36
 1301 030c 8F020000 		.4byte	0x28f
 1302 0310 0D       		.uleb128 0xd
 1303 0311 16000000 		.4byte	.LVL37
 1304 0315 67010000 		.4byte	0x167
 1305 0319 00       		.byte	0
 1306 031a 10       		.uleb128 0x10
 1307 031b 9D040000 		.4byte	.LASF36
 1308 031f 01       		.byte	0x1
 1309 0320 9101     		.2byte	0x191
 1310 0322 00000000 		.4byte	.LFB6
 1311 0326 10000000 		.4byte	.LFE6-.LFB6
 1312 032a 01       		.uleb128 0x1
 1313 032b 9C       		.byte	0x9c
 1314 032c 10       		.uleb128 0x10
 1315 032d A7030000 		.4byte	.LASF37
 1316 0331 01       		.byte	0x1
 1317 0332 B301     		.2byte	0x1b3
 1318 0334 00000000 		.4byte	.LFB7
 1319 0338 10000000 		.4byte	.LFE7-.LFB7
 1320 033c 01       		.uleb128 0x1
 1321 033d 9C       		.byte	0x9c
 1322 033e 11       		.uleb128 0x11
 1323 033f DF030000 		.4byte	.LASF40
 1324 0343 01       		.byte	0x1
 1325 0344 DB01     		.2byte	0x1db
 1326 0346 80000000 		.4byte	0x80
 1327 034a 00000000 		.4byte	.LFB8
 1328 034e 24000000 		.4byte	.LFE8-.LFB8
 1329 0352 01       		.uleb128 0x1
 1330 0353 9C       		.byte	0x9c
 1331 0354 88030000 		.4byte	0x388
 1332 0358 07       		.uleb128 0x7
 1333 0359 E0000000 		.4byte	.LASF38
 1334 035d 01       		.byte	0x1
 1335 035e DB01     		.2byte	0x1db
 1336 0360 80000000 		.4byte	0x80
 1337 0364 75010000 		.4byte	.LLST9
 1338 0368 08       		.uleb128 0x8
 1339 0369 D8030000 		.4byte	.LASF39
 1340 036d 01       		.byte	0x1
 1341 036e DD01     		.2byte	0x1dd
 1342 0370 80000000 		.4byte	0x80
 1343 0374 96010000 		.4byte	.LLST10
 1344 0378 09       		.uleb128 0x9
 1345 0379 18000000 		.4byte	.LVL41
 1346 037d 88050000 		.4byte	0x588
 1347 0381 0A       		.uleb128 0xa
 1348 0382 01       		.uleb128 0x1
 1349 0383 50       		.byte	0x50
 1350 0384 01       		.uleb128 0x1
 1351 0385 31       		.byte	0x31
 1352 0386 00       		.byte	0
 1353 0387 00       		.byte	0
 1354 0388 12       		.uleb128 0x12
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 41


 1355 0389 07000000 		.4byte	.LASF70
 1356 038d 01       		.byte	0x1
 1357 038e 0802     		.2byte	0x208
 1358 0390 A4000000 		.4byte	0xa4
 1359 0394 00000000 		.4byte	.LFB9
 1360 0398 18000000 		.4byte	.LFE9-.LFB9
 1361 039c 01       		.uleb128 0x1
 1362 039d 9C       		.byte	0x9c
 1363 039e 11       		.uleb128 0x11
 1364 039f 3E030000 		.4byte	.LASF41
 1365 03a3 01       		.byte	0x1
 1366 03a4 2602     		.2byte	0x226
 1367 03a6 B0000000 		.4byte	0xb0
 1368 03aa 00000000 		.4byte	.LFB10
 1369 03ae 18000000 		.4byte	.LFE10-.LFB10
 1370 03b2 01       		.uleb128 0x1
 1371 03b3 9C       		.byte	0x9c
 1372 03b4 C9030000 		.4byte	0x3c9
 1373 03b8 13       		.uleb128 0x13
 1374 03b9 72657300 		.ascii	"res\000"
 1375 03bd 01       		.byte	0x1
 1376 03be 2802     		.2byte	0x228
 1377 03c0 8C000000 		.4byte	0x8c
 1378 03c4 AD010000 		.4byte	.LLST11
 1379 03c8 00       		.byte	0
 1380 03c9 0F       		.uleb128 0xf
 1381 03ca FE010000 		.4byte	.LASF42
 1382 03ce 01       		.byte	0x1
 1383 03cf 4902     		.2byte	0x249
 1384 03d1 00000000 		.4byte	.LFB11
 1385 03d5 0C000000 		.4byte	.LFE11-.LFB11
 1386 03d9 01       		.uleb128 0x1
 1387 03da 9C       		.byte	0x9c
 1388 03db EE030000 		.4byte	0x3ee
 1389 03df 14       		.uleb128 0x14
 1390 03e0 A0030000 		.4byte	.LASF43
 1391 03e4 01       		.byte	0x1
 1392 03e5 4902     		.2byte	0x249
 1393 03e7 B0000000 		.4byte	0xb0
 1394 03eb 01       		.uleb128 0x1
 1395 03ec 50       		.byte	0x50
 1396 03ed 00       		.byte	0
 1397 03ee 0F       		.uleb128 0xf
 1398 03ef 0C040000 		.4byte	.LASF44
 1399 03f3 01       		.byte	0x1
 1400 03f4 B402     		.2byte	0x2b4
 1401 03f6 00000000 		.4byte	.LFB13
 1402 03fa 10000000 		.4byte	.LFE13-.LFB13
 1403 03fe 01       		.uleb128 0x1
 1404 03ff 9C       		.byte	0x9c
 1405 0400 15040000 		.4byte	0x415
 1406 0404 07       		.uleb128 0x7
 1407 0405 7F020000 		.4byte	.LASF45
 1408 0409 01       		.byte	0x1
 1409 040a B402     		.2byte	0x2b4
 1410 040c B0000000 		.4byte	0xb0
 1411 0410 C0010000 		.4byte	.LLST12
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 42


 1412 0414 00       		.byte	0
 1413 0415 0F       		.uleb128 0xf
 1414 0416 98020000 		.4byte	.LASF46
 1415 041a 01       		.byte	0x1
 1416 041b CF02     		.2byte	0x2cf
 1417 041d 00000000 		.4byte	.LFB14
 1418 0421 0C000000 		.4byte	.LFE14-.LFB14
 1419 0425 01       		.uleb128 0x1
 1420 0426 9C       		.byte	0x9c
 1421 0427 3A040000 		.4byte	0x43a
 1422 042b 14       		.uleb128 0x14
 1423 042c 7F020000 		.4byte	.LASF45
 1424 0430 01       		.byte	0x1
 1425 0431 CF02     		.2byte	0x2cf
 1426 0433 BC000000 		.4byte	0xbc
 1427 0437 01       		.uleb128 0x1
 1428 0438 50       		.byte	0x50
 1429 0439 00       		.byte	0
 1430 043a 11       		.uleb128 0x11
 1431 043b 5B020000 		.4byte	.LASF47
 1432 043f 01       		.byte	0x1
 1433 0440 E702     		.2byte	0x2e7
 1434 0442 B0000000 		.4byte	0xb0
 1435 0446 00000000 		.4byte	.LFB15
 1436 044a 58000000 		.4byte	.LFE15-.LFB15
 1437 044e 01       		.uleb128 0x1
 1438 044f 9C       		.byte	0x9c
 1439 0450 83040000 		.4byte	0x483
 1440 0454 07       		.uleb128 0x7
 1441 0455 BD030000 		.4byte	.LASF48
 1442 0459 01       		.byte	0x1
 1443 045a E702     		.2byte	0x2e7
 1444 045c B0000000 		.4byte	0xb0
 1445 0460 E1010000 		.4byte	.LLST13
 1446 0464 15       		.uleb128 0x15
 1447 0465 52010000 		.4byte	.LASF49
 1448 0469 01       		.byte	0x1
 1449 046a E902     		.2byte	0x2e9
 1450 046c B0000000 		.4byte	0xb0
 1451 0470 01       		.uleb128 0x1
 1452 0471 50       		.byte	0x50
 1453 0472 08       		.uleb128 0x8
 1454 0473 C1000000 		.4byte	.LASF50
 1455 0477 01       		.byte	0x1
 1456 0478 EA02     		.2byte	0x2ea
 1457 047a BC000000 		.4byte	0xbc
 1458 047e FF010000 		.4byte	.LLST14
 1459 0482 00       		.byte	0
 1460 0483 16       		.uleb128 0x16
 1461 0484 AC010000 		.4byte	.LASF51
 1462 0488 01       		.byte	0x1
 1463 0489 1103     		.2byte	0x311
 1464 048b BC000000 		.4byte	0xbc
 1465 048f 00000000 		.4byte	.LFB16
 1466 0493 48000000 		.4byte	.LFE16-.LFB16
 1467 0497 01       		.uleb128 0x1
 1468 0498 9C       		.byte	0x9c
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 43


 1469 0499 CA040000 		.4byte	0x4ca
 1470 049d 07       		.uleb128 0x7
 1471 049e BD030000 		.4byte	.LASF48
 1472 04a2 01       		.byte	0x1
 1473 04a3 1103     		.2byte	0x311
 1474 04a5 B0000000 		.4byte	0xb0
 1475 04a9 1D020000 		.4byte	.LLST15
 1476 04ad 17       		.uleb128 0x17
 1477 04ae F5000000 		.4byte	.LASF71
 1478 04b2 01       		.byte	0x1
 1479 04b3 1403     		.2byte	0x314
 1480 04b5 E2000000 		.4byte	0xe2
 1481 04b9 08       		.uleb128 0x8
 1482 04ba C1000000 		.4byte	.LASF50
 1483 04be 01       		.byte	0x1
 1484 04bf 1503     		.2byte	0x315
 1485 04c1 BC000000 		.4byte	0xbc
 1486 04c5 3B020000 		.4byte	.LLST16
 1487 04c9 00       		.byte	0
 1488 04ca 16       		.uleb128 0x16
 1489 04cb 87030000 		.4byte	.LASF52
 1490 04cf 01       		.byte	0x1
 1491 04d0 3D03     		.2byte	0x33d
 1492 04d2 C8000000 		.4byte	0xc8
 1493 04d6 00000000 		.4byte	.LFB17
 1494 04da 50000000 		.4byte	.LFE17-.LFB17
 1495 04de 01       		.uleb128 0x1
 1496 04df 9C       		.byte	0x9c
 1497 04e0 13050000 		.4byte	0x513
 1498 04e4 07       		.uleb128 0x7
 1499 04e5 BD030000 		.4byte	.LASF48
 1500 04e9 01       		.byte	0x1
 1501 04ea 3D03     		.2byte	0x33d
 1502 04ec B0000000 		.4byte	0xb0
 1503 04f0 59020000 		.4byte	.LLST17
 1504 04f4 15       		.uleb128 0x15
 1505 04f5 0E010000 		.4byte	.LASF53
 1506 04f9 01       		.byte	0x1
 1507 04fa 3F03     		.2byte	0x33f
 1508 04fc C8000000 		.4byte	0xc8
 1509 0500 01       		.uleb128 0x1
 1510 0501 50       		.byte	0x50
 1511 0502 08       		.uleb128 0x8
 1512 0503 C1000000 		.4byte	.LASF50
 1513 0507 01       		.byte	0x1
 1514 0508 4003     		.2byte	0x340
 1515 050a BC000000 		.4byte	0xbc
 1516 050e 77020000 		.4byte	.LLST18
 1517 0512 00       		.byte	0
 1518 0513 18       		.uleb128 0x18
 1519 0514 29020000 		.4byte	.LASF54
 1520 0518 01       		.byte	0x1
 1521 0519 23       		.byte	0x23
 1522 051a 80000000 		.4byte	0x80
 1523 051e 05       		.uleb128 0x5
 1524 051f 03       		.byte	0x3
 1525 0520 00000000 		.4byte	ADC_SAR_1_initVar
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 44


 1526 0524 18       		.uleb128 0x18
 1527 0525 8C000000 		.4byte	.LASF55
 1528 0529 01       		.byte	0x1
 1529 052a 24       		.byte	0x24
 1530 052b 35050000 		.4byte	0x535
 1531 052f 05       		.uleb128 0x5
 1532 0530 03       		.byte	0x3
 1533 0531 00000000 		.4byte	ADC_SAR_1_offset
 1534 0535 05       		.uleb128 0x5
 1535 0536 B0000000 		.4byte	0xb0
 1536 053a 18       		.uleb128 0x18
 1537 053b 5F010000 		.4byte	.LASF56
 1538 053f 01       		.byte	0x1
 1539 0540 25       		.byte	0x25
 1540 0541 35050000 		.4byte	0x535
 1541 0545 05       		.uleb128 0x5
 1542 0546 03       		.byte	0x3
 1543 0547 00000000 		.4byte	ADC_SAR_1_countsPerVolt
 1544 054b 18       		.uleb128 0x18
 1545 054c 83040000 		.4byte	.LASF57
 1546 0550 01       		.byte	0x1
 1547 0551 26       		.byte	0x26
 1548 0552 5C050000 		.4byte	0x55c
 1549 0556 05       		.uleb128 0x5
 1550 0557 03       		.byte	0x3
 1551 0558 00000000 		.4byte	ADC_SAR_1_countsPer10Volt
 1552 055c 05       		.uleb128 0x5
 1553 055d BC000000 		.4byte	0xbc
 1554 0561 18       		.uleb128 0x18
 1555 0562 BB040000 		.4byte	.LASF58
 1556 0566 01       		.byte	0x1
 1557 0567 27       		.byte	0x27
 1558 0568 35050000 		.4byte	0x535
 1559 056c 05       		.uleb128 0x5
 1560 056d 03       		.byte	0x3
 1561 056e 00000000 		.4byte	ADC_SAR_1_shift
 1562 0572 19       		.uleb128 0x19
 1563 0573 46020000 		.4byte	.LASF59
 1564 0577 46020000 		.4byte	.LASF59
 1565 057b 03       		.byte	0x3
 1566 057c 7F       		.byte	0x7f
 1567 057d 19       		.uleb128 0x19
 1568 057e 14010000 		.4byte	.LASF60
 1569 0582 14010000 		.4byte	.LASF60
 1570 0586 03       		.byte	0x3
 1571 0587 7D       		.byte	0x7d
 1572 0588 19       		.uleb128 0x19
 1573 0589 A9000000 		.4byte	.LASF61
 1574 058d A9000000 		.4byte	.LASF61
 1575 0591 03       		.byte	0x3
 1576 0592 77       		.byte	0x77
 1577 0593 19       		.uleb128 0x19
 1578 0594 1C000000 		.4byte	.LASF62
 1579 0598 1C000000 		.4byte	.LASF62
 1580 059c 03       		.byte	0x3
 1581 059d 7E       		.byte	0x7e
 1582 059e 19       		.uleb128 0x19
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 45


 1583 059f C6010000 		.4byte	.LASF63
 1584 05a3 C6010000 		.4byte	.LASF63
 1585 05a7 04       		.byte	0x4
 1586 05a8 32       		.byte	0x32
 1587 05a9 19       		.uleb128 0x19
 1588 05aa 12020000 		.4byte	.LASF64
 1589 05ae 12020000 		.4byte	.LASF64
 1590 05b2 03       		.byte	0x3
 1591 05b3 8B       		.byte	0x8b
 1592 05b4 19       		.uleb128 0x19
 1593 05b5 D1000000 		.4byte	.LASF65
 1594 05b9 D1000000 		.4byte	.LASF65
 1595 05bd 03       		.byte	0x3
 1596 05be 88       		.byte	0x88
 1597 05bf 00       		.byte	0
 1598              		.section	.debug_abbrev,"",%progbits
 1599              	.Ldebug_abbrev0:
 1600 0000 01       		.uleb128 0x1
 1601 0001 11       		.uleb128 0x11
 1602 0002 01       		.byte	0x1
 1603 0003 25       		.uleb128 0x25
 1604 0004 0E       		.uleb128 0xe
 1605 0005 13       		.uleb128 0x13
 1606 0006 0B       		.uleb128 0xb
 1607 0007 03       		.uleb128 0x3
 1608 0008 0E       		.uleb128 0xe
 1609 0009 1B       		.uleb128 0x1b
 1610 000a 0E       		.uleb128 0xe
 1611 000b 55       		.uleb128 0x55
 1612 000c 17       		.uleb128 0x17
 1613 000d 11       		.uleb128 0x11
 1614 000e 01       		.uleb128 0x1
 1615 000f 10       		.uleb128 0x10
 1616 0010 17       		.uleb128 0x17
 1617 0011 00       		.byte	0
 1618 0012 00       		.byte	0
 1619 0013 02       		.uleb128 0x2
 1620 0014 24       		.uleb128 0x24
 1621 0015 00       		.byte	0
 1622 0016 0B       		.uleb128 0xb
 1623 0017 0B       		.uleb128 0xb
 1624 0018 3E       		.uleb128 0x3e
 1625 0019 0B       		.uleb128 0xb
 1626 001a 03       		.uleb128 0x3
 1627 001b 08       		.uleb128 0x8
 1628 001c 00       		.byte	0
 1629 001d 00       		.byte	0
 1630 001e 03       		.uleb128 0x3
 1631 001f 24       		.uleb128 0x24
 1632 0020 00       		.byte	0
 1633 0021 0B       		.uleb128 0xb
 1634 0022 0B       		.uleb128 0xb
 1635 0023 3E       		.uleb128 0x3e
 1636 0024 0B       		.uleb128 0xb
 1637 0025 03       		.uleb128 0x3
 1638 0026 0E       		.uleb128 0xe
 1639 0027 00       		.byte	0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 46


 1640 0028 00       		.byte	0
 1641 0029 04       		.uleb128 0x4
 1642 002a 16       		.uleb128 0x16
 1643 002b 00       		.byte	0
 1644 002c 03       		.uleb128 0x3
 1645 002d 0E       		.uleb128 0xe
 1646 002e 3A       		.uleb128 0x3a
 1647 002f 0B       		.uleb128 0xb
 1648 0030 3B       		.uleb128 0x3b
 1649 0031 05       		.uleb128 0x5
 1650 0032 49       		.uleb128 0x49
 1651 0033 13       		.uleb128 0x13
 1652 0034 00       		.byte	0
 1653 0035 00       		.byte	0
 1654 0036 05       		.uleb128 0x5
 1655 0037 35       		.uleb128 0x35
 1656 0038 00       		.byte	0
 1657 0039 49       		.uleb128 0x49
 1658 003a 13       		.uleb128 0x13
 1659 003b 00       		.byte	0
 1660 003c 00       		.byte	0
 1661 003d 06       		.uleb128 0x6
 1662 003e 2E       		.uleb128 0x2e
 1663 003f 01       		.byte	0x1
 1664 0040 03       		.uleb128 0x3
 1665 0041 0E       		.uleb128 0xe
 1666 0042 3A       		.uleb128 0x3a
 1667 0043 0B       		.uleb128 0xb
 1668 0044 3B       		.uleb128 0x3b
 1669 0045 05       		.uleb128 0x5
 1670 0046 27       		.uleb128 0x27
 1671 0047 19       		.uleb128 0x19
 1672 0048 11       		.uleb128 0x11
 1673 0049 01       		.uleb128 0x1
 1674 004a 12       		.uleb128 0x12
 1675 004b 06       		.uleb128 0x6
 1676 004c 40       		.uleb128 0x40
 1677 004d 18       		.uleb128 0x18
 1678 004e 9742     		.uleb128 0x2117
 1679 0050 19       		.uleb128 0x19
 1680 0051 01       		.uleb128 0x1
 1681 0052 13       		.uleb128 0x13
 1682 0053 00       		.byte	0
 1683 0054 00       		.byte	0
 1684 0055 07       		.uleb128 0x7
 1685 0056 05       		.uleb128 0x5
 1686 0057 00       		.byte	0
 1687 0058 03       		.uleb128 0x3
 1688 0059 0E       		.uleb128 0xe
 1689 005a 3A       		.uleb128 0x3a
 1690 005b 0B       		.uleb128 0xb
 1691 005c 3B       		.uleb128 0x3b
 1692 005d 05       		.uleb128 0x5
 1693 005e 49       		.uleb128 0x49
 1694 005f 13       		.uleb128 0x13
 1695 0060 02       		.uleb128 0x2
 1696 0061 17       		.uleb128 0x17
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 47


 1697 0062 00       		.byte	0
 1698 0063 00       		.byte	0
 1699 0064 08       		.uleb128 0x8
 1700 0065 34       		.uleb128 0x34
 1701 0066 00       		.byte	0
 1702 0067 03       		.uleb128 0x3
 1703 0068 0E       		.uleb128 0xe
 1704 0069 3A       		.uleb128 0x3a
 1705 006a 0B       		.uleb128 0xb
 1706 006b 3B       		.uleb128 0x3b
 1707 006c 05       		.uleb128 0x5
 1708 006d 49       		.uleb128 0x49
 1709 006e 13       		.uleb128 0x13
 1710 006f 02       		.uleb128 0x2
 1711 0070 17       		.uleb128 0x17
 1712 0071 00       		.byte	0
 1713 0072 00       		.byte	0
 1714 0073 09       		.uleb128 0x9
 1715 0074 898201   		.uleb128 0x4109
 1716 0077 01       		.byte	0x1
 1717 0078 11       		.uleb128 0x11
 1718 0079 01       		.uleb128 0x1
 1719 007a 31       		.uleb128 0x31
 1720 007b 13       		.uleb128 0x13
 1721 007c 00       		.byte	0
 1722 007d 00       		.byte	0
 1723 007e 0A       		.uleb128 0xa
 1724 007f 8A8201   		.uleb128 0x410a
 1725 0082 00       		.byte	0
 1726 0083 02       		.uleb128 0x2
 1727 0084 18       		.uleb128 0x18
 1728 0085 9142     		.uleb128 0x2111
 1729 0087 18       		.uleb128 0x18
 1730 0088 00       		.byte	0
 1731 0089 00       		.byte	0
 1732 008a 0B       		.uleb128 0xb
 1733 008b 2E       		.uleb128 0x2e
 1734 008c 01       		.byte	0x1
 1735 008d 3F       		.uleb128 0x3f
 1736 008e 19       		.uleb128 0x19
 1737 008f 03       		.uleb128 0x3
 1738 0090 0E       		.uleb128 0xe
 1739 0091 3A       		.uleb128 0x3a
 1740 0092 0B       		.uleb128 0xb
 1741 0093 3B       		.uleb128 0x3b
 1742 0094 0B       		.uleb128 0xb
 1743 0095 27       		.uleb128 0x27
 1744 0096 19       		.uleb128 0x19
 1745 0097 11       		.uleb128 0x11
 1746 0098 01       		.uleb128 0x1
 1747 0099 12       		.uleb128 0x12
 1748 009a 06       		.uleb128 0x6
 1749 009b 40       		.uleb128 0x40
 1750 009c 18       		.uleb128 0x18
 1751 009d 9742     		.uleb128 0x2117
 1752 009f 19       		.uleb128 0x19
 1753 00a0 01       		.uleb128 0x1
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 48


 1754 00a1 13       		.uleb128 0x13
 1755 00a2 00       		.byte	0
 1756 00a3 00       		.byte	0
 1757 00a4 0C       		.uleb128 0xc
 1758 00a5 34       		.uleb128 0x34
 1759 00a6 00       		.byte	0
 1760 00a7 03       		.uleb128 0x3
 1761 00a8 0E       		.uleb128 0xe
 1762 00a9 3A       		.uleb128 0x3a
 1763 00aa 0B       		.uleb128 0xb
 1764 00ab 3B       		.uleb128 0x3b
 1765 00ac 0B       		.uleb128 0xb
 1766 00ad 49       		.uleb128 0x49
 1767 00ae 13       		.uleb128 0x13
 1768 00af 02       		.uleb128 0x2
 1769 00b0 17       		.uleb128 0x17
 1770 00b1 00       		.byte	0
 1771 00b2 00       		.byte	0
 1772 00b3 0D       		.uleb128 0xd
 1773 00b4 898201   		.uleb128 0x4109
 1774 00b7 00       		.byte	0
 1775 00b8 11       		.uleb128 0x11
 1776 00b9 01       		.uleb128 0x1
 1777 00ba 31       		.uleb128 0x31
 1778 00bb 13       		.uleb128 0x13
 1779 00bc 00       		.byte	0
 1780 00bd 00       		.byte	0
 1781 00be 0E       		.uleb128 0xe
 1782 00bf 898201   		.uleb128 0x4109
 1783 00c2 01       		.byte	0x1
 1784 00c3 11       		.uleb128 0x11
 1785 00c4 01       		.uleb128 0x1
 1786 00c5 31       		.uleb128 0x31
 1787 00c6 13       		.uleb128 0x13
 1788 00c7 01       		.uleb128 0x1
 1789 00c8 13       		.uleb128 0x13
 1790 00c9 00       		.byte	0
 1791 00ca 00       		.byte	0
 1792 00cb 0F       		.uleb128 0xf
 1793 00cc 2E       		.uleb128 0x2e
 1794 00cd 01       		.byte	0x1
 1795 00ce 3F       		.uleb128 0x3f
 1796 00cf 19       		.uleb128 0x19
 1797 00d0 03       		.uleb128 0x3
 1798 00d1 0E       		.uleb128 0xe
 1799 00d2 3A       		.uleb128 0x3a
 1800 00d3 0B       		.uleb128 0xb
 1801 00d4 3B       		.uleb128 0x3b
 1802 00d5 05       		.uleb128 0x5
 1803 00d6 27       		.uleb128 0x27
 1804 00d7 19       		.uleb128 0x19
 1805 00d8 11       		.uleb128 0x11
 1806 00d9 01       		.uleb128 0x1
 1807 00da 12       		.uleb128 0x12
 1808 00db 06       		.uleb128 0x6
 1809 00dc 40       		.uleb128 0x40
 1810 00dd 18       		.uleb128 0x18
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 49


 1811 00de 9742     		.uleb128 0x2117
 1812 00e0 19       		.uleb128 0x19
 1813 00e1 01       		.uleb128 0x1
 1814 00e2 13       		.uleb128 0x13
 1815 00e3 00       		.byte	0
 1816 00e4 00       		.byte	0
 1817 00e5 10       		.uleb128 0x10
 1818 00e6 2E       		.uleb128 0x2e
 1819 00e7 00       		.byte	0
 1820 00e8 3F       		.uleb128 0x3f
 1821 00e9 19       		.uleb128 0x19
 1822 00ea 03       		.uleb128 0x3
 1823 00eb 0E       		.uleb128 0xe
 1824 00ec 3A       		.uleb128 0x3a
 1825 00ed 0B       		.uleb128 0xb
 1826 00ee 3B       		.uleb128 0x3b
 1827 00ef 05       		.uleb128 0x5
 1828 00f0 27       		.uleb128 0x27
 1829 00f1 19       		.uleb128 0x19
 1830 00f2 11       		.uleb128 0x11
 1831 00f3 01       		.uleb128 0x1
 1832 00f4 12       		.uleb128 0x12
 1833 00f5 06       		.uleb128 0x6
 1834 00f6 40       		.uleb128 0x40
 1835 00f7 18       		.uleb128 0x18
 1836 00f8 9742     		.uleb128 0x2117
 1837 00fa 19       		.uleb128 0x19
 1838 00fb 00       		.byte	0
 1839 00fc 00       		.byte	0
 1840 00fd 11       		.uleb128 0x11
 1841 00fe 2E       		.uleb128 0x2e
 1842 00ff 01       		.byte	0x1
 1843 0100 3F       		.uleb128 0x3f
 1844 0101 19       		.uleb128 0x19
 1845 0102 03       		.uleb128 0x3
 1846 0103 0E       		.uleb128 0xe
 1847 0104 3A       		.uleb128 0x3a
 1848 0105 0B       		.uleb128 0xb
 1849 0106 3B       		.uleb128 0x3b
 1850 0107 05       		.uleb128 0x5
 1851 0108 27       		.uleb128 0x27
 1852 0109 19       		.uleb128 0x19
 1853 010a 49       		.uleb128 0x49
 1854 010b 13       		.uleb128 0x13
 1855 010c 11       		.uleb128 0x11
 1856 010d 01       		.uleb128 0x1
 1857 010e 12       		.uleb128 0x12
 1858 010f 06       		.uleb128 0x6
 1859 0110 40       		.uleb128 0x40
 1860 0111 18       		.uleb128 0x18
 1861 0112 9742     		.uleb128 0x2117
 1862 0114 19       		.uleb128 0x19
 1863 0115 01       		.uleb128 0x1
 1864 0116 13       		.uleb128 0x13
 1865 0117 00       		.byte	0
 1866 0118 00       		.byte	0
 1867 0119 12       		.uleb128 0x12
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 50


 1868 011a 2E       		.uleb128 0x2e
 1869 011b 00       		.byte	0
 1870 011c 3F       		.uleb128 0x3f
 1871 011d 19       		.uleb128 0x19
 1872 011e 03       		.uleb128 0x3
 1873 011f 0E       		.uleb128 0xe
 1874 0120 3A       		.uleb128 0x3a
 1875 0121 0B       		.uleb128 0xb
 1876 0122 3B       		.uleb128 0x3b
 1877 0123 05       		.uleb128 0x5
 1878 0124 27       		.uleb128 0x27
 1879 0125 19       		.uleb128 0x19
 1880 0126 49       		.uleb128 0x49
 1881 0127 13       		.uleb128 0x13
 1882 0128 11       		.uleb128 0x11
 1883 0129 01       		.uleb128 0x1
 1884 012a 12       		.uleb128 0x12
 1885 012b 06       		.uleb128 0x6
 1886 012c 40       		.uleb128 0x40
 1887 012d 18       		.uleb128 0x18
 1888 012e 9742     		.uleb128 0x2117
 1889 0130 19       		.uleb128 0x19
 1890 0131 00       		.byte	0
 1891 0132 00       		.byte	0
 1892 0133 13       		.uleb128 0x13
 1893 0134 34       		.uleb128 0x34
 1894 0135 00       		.byte	0
 1895 0136 03       		.uleb128 0x3
 1896 0137 08       		.uleb128 0x8
 1897 0138 3A       		.uleb128 0x3a
 1898 0139 0B       		.uleb128 0xb
 1899 013a 3B       		.uleb128 0x3b
 1900 013b 05       		.uleb128 0x5
 1901 013c 49       		.uleb128 0x49
 1902 013d 13       		.uleb128 0x13
 1903 013e 02       		.uleb128 0x2
 1904 013f 17       		.uleb128 0x17
 1905 0140 00       		.byte	0
 1906 0141 00       		.byte	0
 1907 0142 14       		.uleb128 0x14
 1908 0143 05       		.uleb128 0x5
 1909 0144 00       		.byte	0
 1910 0145 03       		.uleb128 0x3
 1911 0146 0E       		.uleb128 0xe
 1912 0147 3A       		.uleb128 0x3a
 1913 0148 0B       		.uleb128 0xb
 1914 0149 3B       		.uleb128 0x3b
 1915 014a 05       		.uleb128 0x5
 1916 014b 49       		.uleb128 0x49
 1917 014c 13       		.uleb128 0x13
 1918 014d 02       		.uleb128 0x2
 1919 014e 18       		.uleb128 0x18
 1920 014f 00       		.byte	0
 1921 0150 00       		.byte	0
 1922 0151 15       		.uleb128 0x15
 1923 0152 34       		.uleb128 0x34
 1924 0153 00       		.byte	0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 51


 1925 0154 03       		.uleb128 0x3
 1926 0155 0E       		.uleb128 0xe
 1927 0156 3A       		.uleb128 0x3a
 1928 0157 0B       		.uleb128 0xb
 1929 0158 3B       		.uleb128 0x3b
 1930 0159 05       		.uleb128 0x5
 1931 015a 49       		.uleb128 0x49
 1932 015b 13       		.uleb128 0x13
 1933 015c 02       		.uleb128 0x2
 1934 015d 18       		.uleb128 0x18
 1935 015e 00       		.byte	0
 1936 015f 00       		.byte	0
 1937 0160 16       		.uleb128 0x16
 1938 0161 2E       		.uleb128 0x2e
 1939 0162 01       		.byte	0x1
 1940 0163 3F       		.uleb128 0x3f
 1941 0164 19       		.uleb128 0x19
 1942 0165 03       		.uleb128 0x3
 1943 0166 0E       		.uleb128 0xe
 1944 0167 3A       		.uleb128 0x3a
 1945 0168 0B       		.uleb128 0xb
 1946 0169 3B       		.uleb128 0x3b
 1947 016a 05       		.uleb128 0x5
 1948 016b 27       		.uleb128 0x27
 1949 016c 19       		.uleb128 0x19
 1950 016d 49       		.uleb128 0x49
 1951 016e 13       		.uleb128 0x13
 1952 016f 11       		.uleb128 0x11
 1953 0170 01       		.uleb128 0x1
 1954 0171 12       		.uleb128 0x12
 1955 0172 06       		.uleb128 0x6
 1956 0173 40       		.uleb128 0x40
 1957 0174 18       		.uleb128 0x18
 1958 0175 9642     		.uleb128 0x2116
 1959 0177 19       		.uleb128 0x19
 1960 0178 01       		.uleb128 0x1
 1961 0179 13       		.uleb128 0x13
 1962 017a 00       		.byte	0
 1963 017b 00       		.byte	0
 1964 017c 17       		.uleb128 0x17
 1965 017d 34       		.uleb128 0x34
 1966 017e 00       		.byte	0
 1967 017f 03       		.uleb128 0x3
 1968 0180 0E       		.uleb128 0xe
 1969 0181 3A       		.uleb128 0x3a
 1970 0182 0B       		.uleb128 0xb
 1971 0183 3B       		.uleb128 0x3b
 1972 0184 05       		.uleb128 0x5
 1973 0185 49       		.uleb128 0x49
 1974 0186 13       		.uleb128 0x13
 1975 0187 00       		.byte	0
 1976 0188 00       		.byte	0
 1977 0189 18       		.uleb128 0x18
 1978 018a 34       		.uleb128 0x34
 1979 018b 00       		.byte	0
 1980 018c 03       		.uleb128 0x3
 1981 018d 0E       		.uleb128 0xe
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 52


 1982 018e 3A       		.uleb128 0x3a
 1983 018f 0B       		.uleb128 0xb
 1984 0190 3B       		.uleb128 0x3b
 1985 0191 0B       		.uleb128 0xb
 1986 0192 49       		.uleb128 0x49
 1987 0193 13       		.uleb128 0x13
 1988 0194 3F       		.uleb128 0x3f
 1989 0195 19       		.uleb128 0x19
 1990 0196 02       		.uleb128 0x2
 1991 0197 18       		.uleb128 0x18
 1992 0198 00       		.byte	0
 1993 0199 00       		.byte	0
 1994 019a 19       		.uleb128 0x19
 1995 019b 2E       		.uleb128 0x2e
 1996 019c 00       		.byte	0
 1997 019d 3F       		.uleb128 0x3f
 1998 019e 19       		.uleb128 0x19
 1999 019f 3C       		.uleb128 0x3c
 2000 01a0 19       		.uleb128 0x19
 2001 01a1 6E       		.uleb128 0x6e
 2002 01a2 0E       		.uleb128 0xe
 2003 01a3 03       		.uleb128 0x3
 2004 01a4 0E       		.uleb128 0xe
 2005 01a5 3A       		.uleb128 0x3a
 2006 01a6 0B       		.uleb128 0xb
 2007 01a7 3B       		.uleb128 0x3b
 2008 01a8 0B       		.uleb128 0xb
 2009 01a9 00       		.byte	0
 2010 01aa 00       		.byte	0
 2011 01ab 00       		.byte	0
 2012              		.section	.debug_loc,"",%progbits
 2013              	.Ldebug_loc0:
 2014              	.LLST0:
 2015 0000 00000000 		.4byte	.LVL0
 2016 0004 1E000000 		.4byte	.LVL3
 2017 0008 0100     		.2byte	0x1
 2018 000a 50       		.byte	0x50
 2019 000b 1E000000 		.4byte	.LVL3
 2020 000f 26000000 		.4byte	.LVL5
 2021 0013 0400     		.2byte	0x4
 2022 0015 F3       		.byte	0xf3
 2023 0016 01       		.uleb128 0x1
 2024 0017 50       		.byte	0x50
 2025 0018 9F       		.byte	0x9f
 2026 0019 26000000 		.4byte	.LVL5
 2027 001d 2A000000 		.4byte	.LVL6
 2028 0021 0100     		.2byte	0x1
 2029 0023 50       		.byte	0x50
 2030 0024 2A000000 		.4byte	.LVL6
 2031 0028 64000000 		.4byte	.LFE12
 2032 002c 0400     		.2byte	0x4
 2033 002e F3       		.byte	0xf3
 2034 002f 01       		.uleb128 0x1
 2035 0030 50       		.byte	0x50
 2036 0031 9F       		.byte	0x9f
 2037 0032 00000000 		.4byte	0
 2038 0036 00000000 		.4byte	0
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 53


 2039              	.LLST1:
 2040 003a 16000000 		.4byte	.LVL1
 2041 003e 1C000000 		.4byte	.LVL2
 2042 0042 0400     		.2byte	0x4
 2043 0044 0A       		.byte	0xa
 2044 0045 0001     		.2byte	0x100
 2045 0047 9F       		.byte	0x9f
 2046 0048 1C000000 		.4byte	.LVL2
 2047 004c 26000000 		.4byte	.LVL5
 2048 0050 0200     		.2byte	0x2
 2049 0052 30       		.byte	0x30
 2050 0053 9F       		.byte	0x9f
 2051 0054 2A000000 		.4byte	.LVL6
 2052 0058 3E000000 		.4byte	.LVL7
 2053 005c 0100     		.2byte	0x1
 2054 005e 52       		.byte	0x52
 2055 005f 00000000 		.4byte	0
 2056 0063 00000000 		.4byte	0
 2057              	.LLST2:
 2058 0067 38000000 		.4byte	.LVL10
 2059 006b 3C000000 		.4byte	.LVL11
 2060 006f 0500     		.2byte	0x5
 2061 0071 73       		.byte	0x73
 2062 0072 00       		.sleb128 0
 2063 0073 32       		.byte	0x32
 2064 0074 21       		.byte	0x21
 2065 0075 9F       		.byte	0x9f
 2066 0076 40000000 		.4byte	.LVL12
 2067 007a 46000000 		.4byte	.LVL13
 2068 007e 0100     		.2byte	0x1
 2069 0080 53       		.byte	0x53
 2070 0081 46000000 		.4byte	.LVL13
 2071 0085 48000000 		.4byte	.LVL14
 2072 0089 0500     		.2byte	0x5
 2073 008b 0C       		.byte	0xc
 2074 008c 0B590040 		.4byte	0x4000590b
 2075 0090 00000000 		.4byte	0
 2076 0094 00000000 		.4byte	0
 2077              	.LLST3:
 2078 0098 08000000 		.4byte	.LVL9
 2079 009c 88000000 		.4byte	.LVL17
 2080 00a0 0100     		.2byte	0x1
 2081 00a2 54       		.byte	0x54
 2082 00a3 00000000 		.4byte	0
 2083 00a7 00000000 		.4byte	0
 2084              	.LLST4:
 2085 00ab 06000000 		.4byte	.LVL18
 2086 00af 3F000000 		.4byte	.LVL19-1
 2087 00b3 0100     		.2byte	0x1
 2088 00b5 50       		.byte	0x50
 2089 00b6 00000000 		.4byte	0
 2090 00ba 00000000 		.4byte	0
 2091              	.LLST5:
 2092 00be 00000000 		.4byte	.LVL20
 2093 00c2 00000000 		.4byte	.LVL20
 2094 00c6 0100     		.2byte	0x1
 2095 00c8 50       		.byte	0x50
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 54


 2096 00c9 00000000 		.4byte	.LVL20
 2097 00cd 0C000000 		.4byte	.LVL22
 2098 00d1 0500     		.2byte	0x5
 2099 00d3 70       		.byte	0x70
 2100 00d4 00       		.sleb128 0
 2101 00d5 33       		.byte	0x33
 2102 00d6 1A       		.byte	0x1a
 2103 00d7 9F       		.byte	0x9f
 2104 00d8 0C000000 		.4byte	.LVL22
 2105 00dc 18000000 		.4byte	.LFE4
 2106 00e0 0600     		.2byte	0x6
 2107 00e2 F3       		.byte	0xf3
 2108 00e3 01       		.uleb128 0x1
 2109 00e4 50       		.byte	0x50
 2110 00e5 33       		.byte	0x33
 2111 00e6 1A       		.byte	0x1a
 2112 00e7 9F       		.byte	0x9f
 2113 00e8 00000000 		.4byte	0
 2114 00ec 00000000 		.4byte	0
 2115              	.LLST6:
 2116 00f0 08000000 		.4byte	.LVL21
 2117 00f4 0E000000 		.4byte	.LVL23
 2118 00f8 0100     		.2byte	0x1
 2119 00fa 53       		.byte	0x53
 2120 00fb 0E000000 		.4byte	.LVL23
 2121 00ff 18000000 		.4byte	.LFE4
 2122 0103 0100     		.2byte	0x1
 2123 0105 50       		.byte	0x50
 2124 0106 00000000 		.4byte	0
 2125 010a 00000000 		.4byte	0
 2126              	.LLST7:
 2127 010e 00000000 		.4byte	.LVL24
 2128 0112 1C000000 		.4byte	.LVL27
 2129 0116 0100     		.2byte	0x1
 2130 0118 50       		.byte	0x50
 2131 0119 1C000000 		.4byte	.LVL27
 2132 011d 24000000 		.4byte	.LVL29
 2133 0121 0400     		.2byte	0x4
 2134 0123 F3       		.byte	0xf3
 2135 0124 01       		.uleb128 0x1
 2136 0125 50       		.byte	0x50
 2137 0126 9F       		.byte	0x9f
 2138 0127 24000000 		.4byte	.LVL29
 2139 012b 26000000 		.4byte	.LVL30
 2140 012f 0100     		.2byte	0x1
 2141 0131 50       		.byte	0x50
 2142 0132 26000000 		.4byte	.LVL30
 2143 0136 38000000 		.4byte	.LFE5
 2144 013a 0400     		.2byte	0x4
 2145 013c F3       		.byte	0xf3
 2146 013d 01       		.uleb128 0x1
 2147 013e 50       		.byte	0x50
 2148 013f 9F       		.byte	0x9f
 2149 0140 00000000 		.4byte	0
 2150 0144 00000000 		.4byte	0
 2151              	.LLST8:
 2152 0148 16000000 		.4byte	.LVL25
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 55


 2153 014c 1A000000 		.4byte	.LVL26
 2154 0150 0300     		.2byte	0x3
 2155 0152 08       		.byte	0x8
 2156 0153 44       		.byte	0x44
 2157 0154 9F       		.byte	0x9f
 2158 0155 1A000000 		.4byte	.LVL26
 2159 0159 24000000 		.4byte	.LVL29
 2160 015d 0300     		.2byte	0x3
 2161 015f 09       		.byte	0x9
 2162 0160 C4       		.byte	0xc4
 2163 0161 9F       		.byte	0x9f
 2164 0162 26000000 		.4byte	.LVL30
 2165 0166 2F000000 		.4byte	.LVL31-1
 2166 016a 0100     		.2byte	0x1
 2167 016c 52       		.byte	0x52
 2168 016d 00000000 		.4byte	0
 2169 0171 00000000 		.4byte	0
 2170              	.LLST9:
 2171 0175 00000000 		.4byte	.LVL38
 2172 0179 14000000 		.4byte	.LVL40
 2173 017d 0100     		.2byte	0x1
 2174 017f 50       		.byte	0x50
 2175 0180 14000000 		.4byte	.LVL40
 2176 0184 24000000 		.4byte	.LFE8
 2177 0188 0400     		.2byte	0x4
 2178 018a F3       		.byte	0xf3
 2179 018b 01       		.uleb128 0x1
 2180 018c 50       		.byte	0x50
 2181 018d 9F       		.byte	0x9f
 2182 018e 00000000 		.4byte	0
 2183 0192 00000000 		.4byte	0
 2184              	.LLST10:
 2185 0196 06000000 		.4byte	.LVL39
 2186 019a 17000000 		.4byte	.LVL41-1
 2187 019e 0500     		.2byte	0x5
 2188 01a0 73       		.byte	0x73
 2189 01a1 00       		.sleb128 0
 2190 01a2 31       		.byte	0x31
 2191 01a3 1A       		.byte	0x1a
 2192 01a4 9F       		.byte	0x9f
 2193 01a5 00000000 		.4byte	0
 2194 01a9 00000000 		.4byte	0
 2195              	.LLST11:
 2196 01ad 06000000 		.4byte	.LVL42
 2197 01b1 0C000000 		.4byte	.LVL43
 2198 01b5 0100     		.2byte	0x1
 2199 01b7 50       		.byte	0x50
 2200 01b8 00000000 		.4byte	0
 2201 01bc 00000000 		.4byte	0
 2202              	.LLST12:
 2203 01c0 00000000 		.4byte	.LVL45
 2204 01c4 04000000 		.4byte	.LVL46
 2205 01c8 0100     		.2byte	0x1
 2206 01ca 50       		.byte	0x50
 2207 01cb 04000000 		.4byte	.LVL46
 2208 01cf 10000000 		.4byte	.LFE13
 2209 01d3 0400     		.2byte	0x4
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 56


 2210 01d5 F3       		.byte	0xf3
 2211 01d6 01       		.uleb128 0x1
 2212 01d7 50       		.byte	0x50
 2213 01d8 9F       		.byte	0x9f
 2214 01d9 00000000 		.4byte	0
 2215 01dd 00000000 		.4byte	0
 2216              	.LLST13:
 2217 01e1 00000000 		.4byte	.LVL48
 2218 01e5 24000000 		.4byte	.LVL52
 2219 01e9 0100     		.2byte	0x1
 2220 01eb 50       		.byte	0x50
 2221 01ec 24000000 		.4byte	.LVL52
 2222 01f0 58000000 		.4byte	.LFE15
 2223 01f4 0100     		.2byte	0x1
 2224 01f6 51       		.byte	0x51
 2225 01f7 00000000 		.4byte	0
 2226 01fb 00000000 		.4byte	0
 2227              	.LLST14:
 2228 01ff 16000000 		.4byte	.LVL49
 2229 0203 18000000 		.4byte	.LVL50
 2230 0207 0100     		.2byte	0x1
 2231 0209 54       		.byte	0x54
 2232 020a 1C000000 		.4byte	.LVL51
 2233 020e 4A000000 		.4byte	.LVL54
 2234 0212 0100     		.2byte	0x1
 2235 0214 54       		.byte	0x54
 2236 0215 00000000 		.4byte	0
 2237 0219 00000000 		.4byte	0
 2238              	.LLST15:
 2239 021d 00000000 		.4byte	.LVL55
 2240 0221 22000000 		.4byte	.LVL59
 2241 0225 0100     		.2byte	0x1
 2242 0227 50       		.byte	0x50
 2243 0228 22000000 		.4byte	.LVL59
 2244 022c 38000000 		.4byte	.LVL61
 2245 0230 0100     		.2byte	0x1
 2246 0232 54       		.byte	0x54
 2247 0233 00000000 		.4byte	0
 2248 0237 00000000 		.4byte	0
 2249              	.LLST16:
 2250 023b 16000000 		.4byte	.LVL56
 2251 023f 18000000 		.4byte	.LVL57
 2252 0243 0100     		.2byte	0x1
 2253 0245 52       		.byte	0x52
 2254 0246 1C000000 		.4byte	.LVL58
 2255 024a 35000000 		.4byte	.LVL60-1
 2256 024e 0100     		.2byte	0x1
 2257 0250 52       		.byte	0x52
 2258 0251 00000000 		.4byte	0
 2259 0255 00000000 		.4byte	0
 2260              	.LLST17:
 2261 0259 00000000 		.4byte	.LVL62
 2262 025d 22000000 		.4byte	.LVL66
 2263 0261 0100     		.2byte	0x1
 2264 0263 50       		.byte	0x50
 2265 0264 22000000 		.4byte	.LVL66
 2266 0268 27000000 		.4byte	.LVL67-1
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 57


 2267 026c 0100     		.2byte	0x1
 2268 026e 50       		.byte	0x50
 2269 026f 00000000 		.4byte	0
 2270 0273 00000000 		.4byte	0
 2271              	.LLST18:
 2272 0277 16000000 		.4byte	.LVL63
 2273 027b 18000000 		.4byte	.LVL64
 2274 027f 0100     		.2byte	0x1
 2275 0281 54       		.byte	0x54
 2276 0282 1C000000 		.4byte	.LVL65
 2277 0286 40000000 		.4byte	.LVL71
 2278 028a 0100     		.2byte	0x1
 2279 028c 54       		.byte	0x54
 2280 028d 00000000 		.4byte	0
 2281 0291 00000000 		.4byte	0
 2282              		.section	.debug_aranges,"",%progbits
 2283 0000 A4000000 		.4byte	0xa4
 2284 0004 0200     		.2byte	0x2
 2285 0006 00000000 		.4byte	.Ldebug_info0
 2286 000a 04       		.byte	0x4
 2287 000b 00       		.byte	0
 2288 000c 0000     		.2byte	0
 2289 000e 0000     		.2byte	0
 2290 0010 00000000 		.4byte	.LFB12
 2291 0014 64000000 		.4byte	.LFE12-.LFB12
 2292 0018 00000000 		.4byte	.LFB2
 2293 001c 98000000 		.4byte	.LFE2-.LFB2
 2294 0020 00000000 		.4byte	.LFB3
 2295 0024 48000000 		.4byte	.LFE3-.LFB3
 2296 0028 00000000 		.4byte	.LFB4
 2297 002c 18000000 		.4byte	.LFE4-.LFB4
 2298 0030 00000000 		.4byte	.LFB5
 2299 0034 38000000 		.4byte	.LFE5-.LFB5
 2300 0038 00000000 		.4byte	.LFB1
 2301 003c 3C000000 		.4byte	.LFE1-.LFB1
 2302 0040 00000000 		.4byte	.LFB0
 2303 0044 1C000000 		.4byte	.LFE0-.LFB0
 2304 0048 00000000 		.4byte	.LFB6
 2305 004c 10000000 		.4byte	.LFE6-.LFB6
 2306 0050 00000000 		.4byte	.LFB7
 2307 0054 10000000 		.4byte	.LFE7-.LFB7
 2308 0058 00000000 		.4byte	.LFB8
 2309 005c 24000000 		.4byte	.LFE8-.LFB8
 2310 0060 00000000 		.4byte	.LFB9
 2311 0064 18000000 		.4byte	.LFE9-.LFB9
 2312 0068 00000000 		.4byte	.LFB10
 2313 006c 18000000 		.4byte	.LFE10-.LFB10
 2314 0070 00000000 		.4byte	.LFB11
 2315 0074 0C000000 		.4byte	.LFE11-.LFB11
 2316 0078 00000000 		.4byte	.LFB13
 2317 007c 10000000 		.4byte	.LFE13-.LFB13
 2318 0080 00000000 		.4byte	.LFB14
 2319 0084 0C000000 		.4byte	.LFE14-.LFB14
 2320 0088 00000000 		.4byte	.LFB15
 2321 008c 58000000 		.4byte	.LFE15-.LFB15
 2322 0090 00000000 		.4byte	.LFB16
 2323 0094 48000000 		.4byte	.LFE16-.LFB16
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 58


 2324 0098 00000000 		.4byte	.LFB17
 2325 009c 50000000 		.4byte	.LFE17-.LFB17
 2326 00a0 00000000 		.4byte	0
 2327 00a4 00000000 		.4byte	0
 2328              		.section	.debug_ranges,"",%progbits
 2329              	.Ldebug_ranges0:
 2330 0000 00000000 		.4byte	.LFB12
 2331 0004 64000000 		.4byte	.LFE12
 2332 0008 00000000 		.4byte	.LFB2
 2333 000c 98000000 		.4byte	.LFE2
 2334 0010 00000000 		.4byte	.LFB3
 2335 0014 48000000 		.4byte	.LFE3
 2336 0018 00000000 		.4byte	.LFB4
 2337 001c 18000000 		.4byte	.LFE4
 2338 0020 00000000 		.4byte	.LFB5
 2339 0024 38000000 		.4byte	.LFE5
 2340 0028 00000000 		.4byte	.LFB1
 2341 002c 3C000000 		.4byte	.LFE1
 2342 0030 00000000 		.4byte	.LFB0
 2343 0034 1C000000 		.4byte	.LFE0
 2344 0038 00000000 		.4byte	.LFB6
 2345 003c 10000000 		.4byte	.LFE6
 2346 0040 00000000 		.4byte	.LFB7
 2347 0044 10000000 		.4byte	.LFE7
 2348 0048 00000000 		.4byte	.LFB8
 2349 004c 24000000 		.4byte	.LFE8
 2350 0050 00000000 		.4byte	.LFB9
 2351 0054 18000000 		.4byte	.LFE9
 2352 0058 00000000 		.4byte	.LFB10
 2353 005c 18000000 		.4byte	.LFE10
 2354 0060 00000000 		.4byte	.LFB11
 2355 0064 0C000000 		.4byte	.LFE11
 2356 0068 00000000 		.4byte	.LFB13
 2357 006c 10000000 		.4byte	.LFE13
 2358 0070 00000000 		.4byte	.LFB14
 2359 0074 0C000000 		.4byte	.LFE14
 2360 0078 00000000 		.4byte	.LFB15
 2361 007c 58000000 		.4byte	.LFE15
 2362 0080 00000000 		.4byte	.LFB16
 2363 0084 48000000 		.4byte	.LFE16
 2364 0088 00000000 		.4byte	.LFB17
 2365 008c 50000000 		.4byte	.LFE17
 2366 0090 00000000 		.4byte	0
 2367 0094 00000000 		.4byte	0
 2368              		.section	.debug_line,"",%progbits
 2369              	.Ldebug_line0:
 2370 0000 1A020000 		.section	.debug_str,"MS",%progbits,1
 2370      02006800 
 2370      00000201 
 2370      FB0E0D00 
 2370      01010101 
 2371              	.LASF13:
 2372 0000 75696E74 		.ascii	"uint16\000"
 2372      313600
 2373              	.LASF70:
 2374 0007 4144435F 		.ascii	"ADC_SAR_1_GetResult8\000"
 2374      5341525F 
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 59


 2374      315F4765 
 2374      74526573 
 2374      756C7438 
 2375              	.LASF62:
 2376 001c 43794578 		.ascii	"CyExitCriticalSection\000"
 2376      69744372 
 2376      69746963 
 2376      616C5365 
 2376      6374696F 
 2377              	.LASF25:
 2378 0032 636F756E 		.ascii	"counts\000"
 2378      747300
 2379              	.LASF69:
 2380 0039 4144435F 		.ascii	"ADC_SAR_1_CalcGain\000"
 2380      5341525F 
 2380      315F4361 
 2380      6C634761 
 2380      696E00
 2381              	.LASF9:
 2382 004c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2382      206C6F6E 
 2382      6720756E 
 2382      7369676E 
 2382      65642069 
 2383              	.LASF1:
 2384 0063 6C6F6E67 		.ascii	"long long int\000"
 2384      206C6F6E 
 2384      6720696E 
 2384      7400
 2385              	.LASF3:
 2386 0071 7369676E 		.ascii	"signed char\000"
 2386      65642063 
 2386      68617200 
 2387              	.LASF17:
 2388 007d 696E7433 		.ascii	"int32\000"
 2388      3200
 2389              	.LASF7:
 2390 0083 6C6F6E67 		.ascii	"long int\000"
 2390      20696E74 
 2390      00
 2391              	.LASF55:
 2392 008c 4144435F 		.ascii	"ADC_SAR_1_offset\000"
 2392      5341525F 
 2392      315F6F66 
 2392      66736574 
 2392      00
 2393              	.LASF23:
 2394 009d 72656731 		.ascii	"reg16\000"
 2394      3600
 2395              	.LASF12:
 2396 00a3 75696E74 		.ascii	"uint8\000"
 2396      3800
 2397              	.LASF61:
 2398 00a9 43794465 		.ascii	"CyDelayUs\000"
 2398      6C617955 
 2398      7300
 2399              	.LASF20:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 60


 2400 00b3 646F7562 		.ascii	"double\000"
 2400      6C6500
 2401              	.LASF14:
 2402 00ba 75696E74 		.ascii	"uint32\000"
 2402      333200
 2403              	.LASF50:
 2404 00c1 636F756E 		.ascii	"countsPer10Volt\000"
 2404      74735065 
 2404      72313056 
 2404      6F6C7400 
 2405              	.LASF65:
 2406 00d1 4379496E 		.ascii	"CyIntSetVector\000"
 2406      74536574 
 2406      56656374 
 2406      6F7200
 2407              	.LASF38:
 2408 00e0 7265744D 		.ascii	"retMode\000"
 2408      6F646500 
 2409              	.LASF0:
 2410 00e8 756E7369 		.ascii	"unsigned int\000"
 2410      676E6564 
 2410      20696E74 
 2410      00
 2411              	.LASF71:
 2412 00f5 75566F6C 		.ascii	"uVolts\000"
 2412      747300
 2413              	.LASF8:
 2414 00fc 6C6F6E67 		.ascii	"long unsigned int\000"
 2414      20756E73 
 2414      69676E65 
 2414      6420696E 
 2414      7400
 2415              	.LASF53:
 2416 010e 766F6C74 		.ascii	"volts\000"
 2416      7300
 2417              	.LASF60:
 2418 0114 4379456E 		.ascii	"CyEnterCriticalSection\000"
 2418      74657243 
 2418      72697469 
 2418      63616C53 
 2418      65637469 
 2419              	.LASF6:
 2420 012b 73686F72 		.ascii	"short unsigned int\000"
 2420      7420756E 
 2420      7369676E 
 2420      65642069 
 2420      6E7400
 2421              	.LASF34:
 2422 013e 4144435F 		.ascii	"ADC_SAR_1_Init\000"
 2422      5341525F 
 2422      315F496E 
 2422      697400
 2423              	.LASF15:
 2424 014d 696E7438 		.ascii	"int8\000"
 2424      00
 2425              	.LASF49:
 2426 0152 6D566F6C 		.ascii	"mVolts\000"
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 61


 2426      747300
 2427              	.LASF24:
 2428 0159 72656733 		.ascii	"reg32\000"
 2428      3200
 2429              	.LASF56:
 2430 015f 4144435F 		.ascii	"ADC_SAR_1_countsPerVolt\000"
 2430      5341525F 
 2430      315F636F 
 2430      756E7473 
 2430      50657256 
 2431              	.LASF18:
 2432 0177 666C6F61 		.ascii	"float32\000"
 2432      74333200 
 2433              	.LASF10:
 2434 017f 73697A65 		.ascii	"sizetype\000"
 2434      74797065 
 2434      00
 2435              	.LASF2:
 2436 0188 6C6F6E67 		.ascii	"long double\000"
 2436      20646F75 
 2436      626C6500 
 2437              	.LASF33:
 2438 0194 4144435F 		.ascii	"ADC_SAR_1_SetResolution\000"
 2438      5341525F 
 2438      315F5365 
 2438      74526573 
 2438      6F6C7574 
 2439              	.LASF51:
 2440 01ac 4144435F 		.ascii	"ADC_SAR_1_CountsTo_uVolts\000"
 2440      5341525F 
 2440      315F436F 
 2440      756E7473 
 2440      546F5F75 
 2441              	.LASF63:
 2442 01c6 4144435F 		.ascii	"ADC_SAR_1_theACLK_SetModeRegister\000"
 2442      5341525F 
 2442      315F7468 
 2442      6541434C 
 2442      4B5F5365 
 2443              	.LASF35:
 2444 01e8 4144435F 		.ascii	"ADC_SAR_1_Start\000"
 2444      5341525F 
 2444      315F5374 
 2444      61727400 
 2445              	.LASF21:
 2446 01f8 696E7436 		.ascii	"int64\000"
 2446      3400
 2447              	.LASF42:
 2448 01fe 4144435F 		.ascii	"ADC_SAR_1_SetOffset\000"
 2448      5341525F 
 2448      315F5365 
 2448      744F6666 
 2448      73657400 
 2449              	.LASF64:
 2450 0212 4379496E 		.ascii	"CyIntSetPriority\000"
 2450      74536574 
 2450      5072696F 
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 62


 2450      72697479 
 2450      00
 2451              	.LASF19:
 2452 0223 666C6F61 		.ascii	"float\000"
 2452      7400
 2453              	.LASF54:
 2454 0229 4144435F 		.ascii	"ADC_SAR_1_initVar\000"
 2454      5341525F 
 2454      315F696E 
 2454      69745661 
 2454      7200
 2455              	.LASF32:
 2456 023b 706F7765 		.ascii	"power\000"
 2456      7200
 2457              	.LASF22:
 2458 0241 72656738 		.ascii	"reg8\000"
 2458      00
 2459              	.LASF59:
 2460 0246 43794861 		.ascii	"CyHalt\000"
 2460      6C7400
 2461              	.LASF4:
 2462 024d 756E7369 		.ascii	"unsigned char\000"
 2462      676E6564 
 2462      20636861 
 2462      7200
 2463              	.LASF47:
 2464 025b 4144435F 		.ascii	"ADC_SAR_1_CountsTo_mVolts\000"
 2464      5341525F 
 2464      315F436F 
 2464      756E7473 
 2464      546F5F6D 
 2465              	.LASF5:
 2466 0275 73686F72 		.ascii	"short int\000"
 2466      7420696E 
 2466      7400
 2467              	.LASF45:
 2468 027f 61646347 		.ascii	"adcGain\000"
 2468      61696E00 
 2469              	.LASF28:
 2470 0287 4144435F 		.ascii	"ADC_SAR_1_Enable\000"
 2470      5341525F 
 2470      315F456E 
 2470      61626C65 
 2470      00
 2471              	.LASF46:
 2472 0298 4144435F 		.ascii	"ADC_SAR_1_SetScaledGain\000"
 2472      5341525F 
 2472      315F5365 
 2472      74536361 
 2472      6C656447 
 2473              	.LASF66:
 2474 02b0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 2474      43313120 
 2474      352E342E 
 2474      31203230 
 2474      31363036 
 2475 02e3 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 63


 2475      20726576 
 2475      6973696F 
 2475      6E203233 
 2475      37373135 
 2476 0316 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 2476      66756E63 
 2476      74696F6E 
 2476      2D736563 
 2476      74696F6E 
 2477              	.LASF41:
 2478 033e 4144435F 		.ascii	"ADC_SAR_1_GetResult16\000"
 2478      5341525F 
 2478      315F4765 
 2478      74526573 
 2478      756C7431 
 2479              	.LASF31:
 2480 0354 7265736F 		.ascii	"resolution\000"
 2480      6C757469 
 2480      6F6E00
 2481              	.LASF67:
 2482 035f 47656E65 		.ascii	"Generated_Source\\PSoC5\\ADC_SAR_1.c\000"
 2482      72617465 
 2482      645F536F 
 2482      75726365 
 2482      5C50536F 
 2483              	.LASF11:
 2484 0382 63686172 		.ascii	"char\000"
 2484      00
 2485              	.LASF52:
 2486 0387 4144435F 		.ascii	"ADC_SAR_1_CountsTo_Volts\000"
 2486      5341525F 
 2486      315F436F 
 2486      756E7473 
 2486      546F5F56 
 2487              	.LASF43:
 2488 03a0 6F666673 		.ascii	"offset\000"
 2488      657400
 2489              	.LASF37:
 2490 03a7 4144435F 		.ascii	"ADC_SAR_1_StopConvert\000"
 2490      5341525F 
 2490      315F5374 
 2490      6F70436F 
 2490      6E766572 
 2491              	.LASF48:
 2492 03bd 61646343 		.ascii	"adcCounts\000"
 2492      6F756E74 
 2492      7300
 2493              	.LASF27:
 2494 03c7 656E6162 		.ascii	"enableInterrupts\000"
 2494      6C65496E 
 2494      74657272 
 2494      75707473 
 2494      00
 2495              	.LASF39:
 2496 03d8 73746174 		.ascii	"status\000"
 2496      757300
 2497              	.LASF40:
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 64


 2498 03df 4144435F 		.ascii	"ADC_SAR_1_IsEndConversion\000"
 2498      5341525F 
 2498      315F4973 
 2498      456E6443 
 2498      6F6E7665 
 2499              	.LASF30:
 2500 03f9 4144435F 		.ascii	"ADC_SAR_1_SetPower\000"
 2500      5341525F 
 2500      315F5365 
 2500      74506F77 
 2500      657200
 2501              	.LASF44:
 2502 040c 4144435F 		.ascii	"ADC_SAR_1_SetGain\000"
 2502      5341525F 
 2502      315F5365 
 2502      74476169 
 2502      6E00
 2503              	.LASF68:
 2504 041e 433A5C55 		.ascii	"C:\\Users\\magnu\\OneDrive\\Dokumenter\\GitHub\\B-C"
 2504      73657273 
 2504      5C6D6167 
 2504      6E755C4F 
 2504      6E654472 
 2505 044b 41435C50 		.ascii	"AC\\Psoc kode HW\\Kode til til loadcell\\Scale.cyds"
 2505      736F6320 
 2505      6B6F6465 
 2505      2048575C 
 2505      4B6F6465 
 2506 047b 6E00     		.ascii	"n\000"
 2507              	.LASF16:
 2508 047d 696E7431 		.ascii	"int16\000"
 2508      3600
 2509              	.LASF57:
 2510 0483 4144435F 		.ascii	"ADC_SAR_1_countsPer10Volt\000"
 2510      5341525F 
 2510      315F636F 
 2510      756E7473 
 2510      50657231 
 2511              	.LASF36:
 2512 049d 4144435F 		.ascii	"ADC_SAR_1_StartConvert\000"
 2512      5341525F 
 2512      315F5374 
 2512      61727443 
 2512      6F6E7665 
 2513              	.LASF26:
 2514 04b4 746D7052 		.ascii	"tmpReg\000"
 2514      656700
 2515              	.LASF58:
 2516 04bb 4144435F 		.ascii	"ADC_SAR_1_shift\000"
 2516      5341525F 
 2516      315F7368 
 2516      69667400 
 2517              	.LASF29:
 2518 04cb 4144435F 		.ascii	"ADC_SAR_1_Stop\000"
 2518      5341525F 
 2518      315F5374 
 2518      6F7000
ARM GAS  C:\Users\magnu\AppData\Local\Temp\ccNsSFRn.s 			page 65


 2519              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
